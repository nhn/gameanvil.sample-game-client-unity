<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GameAnvil</name>
    </assembly>
    <members>
        <member name="T:GameAnvil.Agent">
            <summary>
            커넥션에이전트와 유저에이전트의 기본 클래스<para></para> 
            직접 사용하지 않음
            </summary>
        </member>
        <member name="M:GameAnvil.Agent.GetServiceName">
            <summary>
            에이전트를 생성할때 지정한 서비스이름을 반환
            </summary>
            <returns>서비스 이름</returns>
        </member>
        <member name="M:GameAnvil.Agent.GetAccountId">
            <summary>
            인증 요청시 사용한 계정 아이디 반환<para></para>
            인증을 하지 않았을 경우니 실패했을 경우에는 빈 문자열
            </summary>
            <returns>계정 아이디</returns>
        </member>
        <member name="M:GameAnvil.Agent.GetSubId">
            <summary>
            유저 에이전트를 생성할때 지정한 서비스 이름을 반환<para></para>
            커넥션 에이전트는 빈 문자열
            </summary>
            <returns>서비스 이름</returns>
        </member>
        <member name="M:GameAnvil.Agent.GetUserId">
            <summary>
            유저 아이디를 반환<para></para>
            로그인시에 설정
            </summary>
            <returns>유저 아이디</returns>
        </member>
        <member name="M:GameAnvil.Agent.Request(GameAnvil.Packet)">
            <summary>
            서버로 패킷을 보내고, 응답을 대기
            AddListener()로 서버에서 응답으로 보낸 패킷을 처리할 리스너를 등록해야 응답을 처리할 수 있음
            </summary>
            <param name="packet">서버로 보낼 패킷</param>
        </member>
        <member name="M:GameAnvil.Agent.Request(System.Collections.Generic.List{GameAnvil.Packet})">
            <summary>
            서버로 패킷 목록을 보내고, 응답을 대기
            AddListener()로 서버에서 응답으로 보낸 패킷을 처리할 리스너를 등록해야 응답을 처리할 수 있음
            </summary>
            <param name="packetList">서버로 보낼 패킷 목록t</param>
        </member>
        <member name="M:GameAnvil.Agent.Send(GameAnvil.Packet)">
            <summary>
            서버로 패킷을 전송
            </summary>
            <param name="packet">서버로 보낼 패킷</param>
        </member>
        <member name="M:GameAnvil.Agent.Send(System.Collections.Generic.List{GameAnvil.Packet})">
            <summary>
            서버로 패킷 목록을 전송
            </summary>
            <param name="packetList">서버로 보낼 패킷 목록</param>
        </member>
        <member name="T:GameAnvil.AgentHelper">
            <summary>
            에이전트의 확장 클래스
            </summary>
        </member>
        <member name="M:GameAnvil.AgentHelper.Request(GameAnvil.User.UserAgent,Google.Protobuf.IMessage)">
            <summary>
            유저 에이전트를 사용해서 프로토 버프 메세지 전송
            </summary>
            <param name="agent">전송할 유저 에이전트</param>
            <param name="message">전송할 프로토 버프 메세지</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.Send(GameAnvil.User.UserAgent,Google.Protobuf.IMessage)">
            <summary>
            유저 에이전트를 사용 해서 프로토 버프 메세지 전송
            </summary>
            <param name="agent">전송할 유저 에이전트</param>
            <param name="message">전송할 프로토 버프 메세지</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.Request(GameAnvil.Connection.ConnectionAgent,Google.Protobuf.IMessage)">
            <summary>
            커넥션 에이전를 사용 해서 프로토 버프 메세지 전송
            </summary>
            <param name="agent">전송할 커넥션 에이전트</param>
            <param name="message">전송할 프로토 버프 메세지 </param>
        </member>
        <member name="M:GameAnvil.AgentHelper.Send(GameAnvil.Connection.ConnectionAgent,Google.Protobuf.IMessage)">
            <summary>
            커넥션 에이전를 사용 해서 프로토 버프 메세지 전송
            </summary>
            <param name="agent">전송할 커넥션 에이전트</param>
            <param name="message">전송할 프로토 버프 메세지 </param>
        </member>
        <member name="M:GameAnvil.AgentHelper.Request``1(GameAnvil.User.UserAgent,Google.Protobuf.IMessage,System.Action{GameAnvil.User.UserAgent,``0})">
            <summary>
            유저 에이전트를 사용 해서 프로토 버프 메세지 전송
            </summary>
            <typeparam name="T">프로토 버프 타입 메세지</typeparam>
            <param name="agent">전송할 유저 에이전트</param>
            <param name="message">전송할 프로토 버프 메세지</param>
            <param name="action">응답 처리 할 동작</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.Request(GameAnvil.User.UserAgent,GameAnvil.Packet,System.Action{GameAnvil.User.UserAgent,GameAnvil.Packet})">
            <summary>
            유저 에이전트를 사용 해서 패킷 전송
            </summary>
            <param name="agent">전송할 유저 에이전트</param>
            <param name="packet">전송할 패킷</param>
            <param name="action">응답 처리 할 동작</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.Request``1(GameAnvil.Connection.ConnectionAgent,Google.Protobuf.IMessage,System.Action{GameAnvil.Connection.ConnectionAgent,``0})">
            <summary>
            커넥션 에이전트를 사용해서 프로토 메세지 전송
            </summary>
            <typeparam name="T">프로토 버프 타입 메세지</typeparam>
            <param name="agent">전송할 커넥션 에이전트</param>
            <param name="message">전송할 프로토 버프 메세지</param>
            <param name="action">응답 처리 할 동작</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.Request(GameAnvil.Connection.ConnectionAgent,GameAnvil.Packet,System.Action{GameAnvil.Connection.ConnectionAgent,GameAnvil.Packet})">
            <summary>
            커넥션 에이전트를 사용해서 패킷 전송
            </summary>
            <param name="agent">전송할 커넥션 에이전트</param>
            <param name="packet">전송할 패킷</param>
            <param name="action">응답 처리할 동작</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.RequestToGatewaySession(GameAnvil.User.UserAgent,Google.Protobuf.IMessage)">
            <summary>
            유저 에이전트를 사용 해서 세션으로 프로토 버프 메세지 전송
            </summary>
            <param name="Agent">전송할 유저 에이전트</param>
            <param name="message">전송할 프로토 버프 메세지</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.RequestToGatewaySession(GameAnvil.User.UserAgent,GameAnvil.Packet)">
            <summary>
            유저 에이전트를 사용 해서 세션으로 패킷 전송
            </summary>
            <param name="Agent">전송할 유저 에이전트</param>
            <param name="packet">전송할 패킷</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.SendToGatewaySession(GameAnvil.User.UserAgent,Google.Protobuf.IMessage)">
            <summary>
            유저 에이전트를 사용 해서 세션으로 프로토 버프 메세지 전송
            </summary>
            <param name="Agent">전송할 유저 에이전트</param>
            <param name="message">전송할 프로토 버프 메세지</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.SendToGatewaySession(GameAnvil.User.UserAgent,GameAnvil.Packet)">
            <summary>
            유저 에이전트를 사용 해서 세션으로 패킷 전송
            </summary>
            <param name="Agent">전송할 유저 에이전트</param>
            <param name="packet">전송할 패킷</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.RequestToGatewaySession``1(GameAnvil.User.UserAgent,Google.Protobuf.IMessage,System.Action{GameAnvil.User.UserAgent,``0})">
            <summary>
            유저 에이전트를 사용 해서 세션으로 메세지 전송
            </summary>
            <typeparam name="T">프로토 버프 타입 메세지</typeparam>
            <param name="agent">전송할 유저 에이전트</param>
            <param name="message">전송할 프로토 버프 메세지</param>
            <param name="action">응답 처리 할 동작</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.RequestToGatewaySession(GameAnvil.User.UserAgent,GameAnvil.Packet,System.Action{GameAnvil.User.UserAgent,GameAnvil.Packet})">
            <summary>
            유저 에이전트를 사용 해서 세션으로 패킷 전송
            </summary>
            <param name="agent">전송헐 유저 에이전트</param>
            <param name="packet">전송할 패킷</param>
            <param name="action">응답 처리 할 동작</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.AddListener``1(GameAnvil.User.UserAgent,System.Action{GameAnvil.User.UserAgent,``0})">
            <summary>
            유저 에이전트에 리스너 등록
            </summary>
            <typeparam name="T">프로토 버프 타입 메세지</typeparam>
            <param name="agent">리스너 등록할 유저 에이전트</param>
            <param name="listener">등록할 리스너</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.AddListener(GameAnvil.User.UserAgent,System.Int32,System.Action{GameAnvil.User.UserAgent,GameAnvil.Packet})">
            <summary>
            유저 에이전트에 커스텀 메세지 아이디로 리스너 등록
            </summary>
            <param name="agent">리스너에 등록할 유저 에이전트</param>
            <param name="customMsgId">등록할 커스텀 메세지 아이디</param>
            <param name="listener">등록할 리스너</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.ContainsListener``1(GameAnvil.User.UserAgent)">
            <summary>
            유저 에이전트에 프로토 메세지 타입의 메세지가 있는지 확인
            </summary>
            <typeparam name="T">프로토 버프 메세지 타입</typeparam>
            <param name="agent">확인할 유저 에이전트</param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.AgentHelper.ContainsListener``1(GameAnvil.User.UserAgent,System.Action{GameAnvil.User.UserAgent,``0})">
            <summary>
            유저 에이전트에 리스너가 등록 되어 있는지 확인
            </summary>
            <typeparam name="T">프로토 버프 메세지 타입</typeparam>
            <param name="agent">확인할 유저 에이전트</param>
            <param name="listener">확인 할리스너</param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.AgentHelper.ContainsListener(GameAnvil.User.UserAgent,System.Int32)">
            <summary>
            유저 에이전트에 커스텀 메세지 가 등록 되어 있는지 확인
            </summary>
            <param name="agent">확인 할 유저 에이전트</param>
            <param name="customMsgId">확안 헐 커스텀 메세지 아이디</param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.AgentHelper.ContainsListener(GameAnvil.User.UserAgent,System.Action{GameAnvil.User.UserAgent,GameAnvil.Packet})">
            <summary>
            유저 에이전트에 등록된 리스너 확인
            </summary>
            <param name="agent">확인할 유저 에이전트</param>
            <param name="listener">확인할 리스너</param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.AgentHelper.RemoveListener``1(GameAnvil.User.UserAgent,System.Action{GameAnvil.User.UserAgent,``0})">
            <summary>
            유저 에이전트에 등록된 리스너 해제
            </summary>
            <typeparam name="T">프로토 버프 타입 메세지</typeparam>
            <param name="agent">해제할 유저 에이전트</param>
            <param name="listener">해제할 리스너</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.RemoveListener(GameAnvil.User.UserAgent,System.Int32,System.Action{GameAnvil.User.UserAgent,GameAnvil.Packet})">
            <summary>
            유저 에이전트에 등록된 리스너 해제
            </summary>
            <param name="agent">해제할 유저 에이전트</param>
            <param name="customMsgId">해제할 커스텀 메세지 아이디</param>
            <param name="listener">해제할 리스너</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.RemoveAllListenersForMsg``1(GameAnvil.User.UserAgent)">
            <summary>
            유저 에이전트에 등록된 모든 메세지 해제
            </summary>
            <typeparam name="T">프로토 버프 메세지</typeparam>
            <param name="agent">해제 할 유저 에이전트</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.RemoveAllListenersForCustomMsg(GameAnvil.User.UserAgent,System.Int32)">
            <summary>
            유저 에이전트에 등록된 모든 커스텀 메세지 해제
            </summary>
            <param name="agent">해제할 유저 에이전트</param>
            <param name="customMsgId">해제할 커스텀 메세지</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.AddListener``1(GameAnvil.Connection.ConnectionAgent,System.Action{GameAnvil.Connection.ConnectionAgent,``0})">
            <summary>
            유저 에이전트에 리스너 등록
            </summary>
            <typeparam name="T">프로토 버프 타입 메세지</typeparam>
            <param name="agent">등록할 유저 에이전트</param>
            <param name="listener">등록할 리스너</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.AddListener(GameAnvil.Connection.ConnectionAgent,System.Int32,System.Action{GameAnvil.Connection.ConnectionAgent,GameAnvil.Packet})">
            <summary>
            커넥션 에이전트에 커스텀 메세지 리스너 등록
            </summary>
            <param name="agent">등록 할 커넥션 에이전트</param>
            <param name="customMsgId">등록할 커스텀 아이디</param>
            <param name="listener">등록 할 리스너</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.ContainsListener``1(GameAnvil.Connection.ConnectionAgent)">
            <summary>
            커넥션 에이전트에 등록 되어 있는 리스너 확인
            </summary>
            <typeparam name="T">프로토 버프 타입 메세지</typeparam>
            <param name="agent">확인 할 커넥션 에이전트</param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.AgentHelper.ContainsListener``1(GameAnvil.Connection.ConnectionAgent,System.Action{GameAnvil.Connection.ConnectionAgent,``0})">
            <summary>
            커넥션 에이전트에 등록 되어 있는 리스너 확인
            </summary>
            <typeparam name="T">프로토 버프 타입 메세지</typeparam>
            <param name="agent">확인 할 커넥션 에이전트</param>
            <param name="listener">확인 할 리스너</param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.AgentHelper.ContainsListener(GameAnvil.Connection.ConnectionAgent,System.Int32)">
            <summary>
            커넥션 에이전트에 등록 되어 있는 리스너 확인
            </summary>
            <param name="agent">확인 할 커넥션 에이전트</param>
            <param name="customMsgId">확인 할 커스텀 메세지 아이디</param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.AgentHelper.ContainsListener(GameAnvil.Connection.ConnectionAgent,System.Int32,System.Action{GameAnvil.Connection.ConnectionAgent,GameAnvil.Packet})">
            <summary>
            커넥션 에이전트에 등록 되어 있는 리스너 확인
            </summary>
            <param name="agent">확인 할 유저 에이전트</param>
            <param name="customMsgId">확인 할 커스텀 메세지 아이디</param>
            <param name="listener">확인 할 리스너</param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.AgentHelper.RemoveListener``1(GameAnvil.Connection.ConnectionAgent,System.Action{GameAnvil.Connection.ConnectionAgent,``0})">
            <summary>
            커넥션 에이전트에 등록 되어 있는 리스너 해제
            </summary>
            <typeparam name="T">프로토 버프 메시지 타입</typeparam>
            <param name="agent">제거할 커넥션 에이전트</param>
            <param name="listener">해제할 리스너</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.RemoveListener(GameAnvil.Connection.ConnectionAgent,System.Int32,System.Action{GameAnvil.Connection.ConnectionAgent,GameAnvil.Packet})">
            <summary>
            커넥션 리스너에 등록 되어 있는 리스너 해제
            </summary>
            <param name="agent">해제 할 커넥션 에이전트</param>
            <param name="customMsgId">해제 할 커스텀 메세지 아이디</param>
            <param name="listener">해제 할 리스너</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.RemoveAllListenersForMsg``1(GameAnvil.Connection.ConnectionAgent)">
            <summary>
            커넥션 리스너에 등록된 모든 리스너 해제
            </summary>
            <typeparam name="T">프로토 버프 타입 메세지</typeparam>
            <param name="agent">해제 할 커넥션 에이전트</param>
        </member>
        <member name="M:GameAnvil.AgentHelper.RemoveAllListenersForCustomMsg(GameAnvil.Connection.ConnectionAgent,System.Int32)">
            <summary>
            커넥션 이스너에 등록된 모든 리스너 해제
            </summary>
            <param name="agent">해제 할 커넥션 에이전트</param>
            <param name="customMsgId">해제 할 커스텀 메세지 아이디</param>
        </member>
        <member name="T:GameAnvil.Connection.Defines.Commands">
            <summary>
            커넥션에서 사용하는 메세지 이름 정의
            </summary>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionOnConnect">
            <summary>
            커넥션 리스너의 Connect() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.Interface.IConnectionOnConnect.OnConnect(GameAnvil.Connection.ConnectionAgent,GameAnvil.Defines.ResultCodeConnect)">
            <summary>
            Connect()의 결과
            </summary>
            <param name="connectionAgent">Connect()를 요청한 커넥션 에이전트</param>
            <param name="result">Connect()의 결과</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.DelConnectionOnConnect">
            <summary>
            Connect() 요청 결과
            </summary>
            <param name="connectionAgent">Connect()를 요청한 커넥션 에이전트</param>
            <param name="result">Connect() 요청 결과 코드</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionOnAuthentication">
            <summary>
            커넥션 리스너의 Authentication() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.Interface.IConnectionOnAuthentication.OnAuthentication(GameAnvil.Connection.ConnectionAgent,GameAnvil.Defines.ResultCodeAuth,System.Collections.Generic.List{GameAnvil.Connection.ConnectionAgent.LoginedUserInfo},System.String,GameAnvil.Payload)">
            <summary>
            Authentication() 결과
            </summary>
            <param name="connectionAgent">Authentication()울 요청한 커넥션 에이전트</param>
            <param name="result">Authentication() 요청 결과</param>
            <param name="loginedUserInfoList">서버에 남아있는 로그인 정보 목록</param>
            <param name="message">서버로부터 받은 메시지</param>
            <param name="payload">서버로부터 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.DelConnectionOnAuthentication">
            <summary>
            Authentication() 결과
            </summary>
            <param name="connectionAgent">Authentication()를 요청한 커넥션 에이전트</param>
            <param name="result">Authentication() 요청 결과</param>
            <param name="loginedUserInfoList">서버에 남아있는 로그인 정보 목록</param>
            <param name="message">서버로부터 받은 메시지</param>
            <param name="payload">서버로부터 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionOnChannelList">
            <summary>
            커넥션 리스너의 GetChannelList() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.Interface.IConnectionOnChannelList.OnChannelList(GameAnvil.Connection.ConnectionAgent,GameAnvil.Defines.ResultCodeChannelList,System.Collections.Generic.List{System.String})">
            <summary>
            GetChannelList() 요청 결과 
            </summary>
            <param name="connectionAgent">GetChannelList()를 요청한 커넥션 에이전트</param>
            <param name="result">GetChannelList() 요청 결과</param>
            <param name="channelIdList">서버에서 받은 채널 목록</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.DelConnectionOnChannelList">
            <summary>
            GetChannelList() 요청 결과
            </summary>
            <param name="connectionAgent">GetChannelList()를 요청한 커넥션 에이전트</param>
            <param name="result">GetChannelList() 요청 결과</param>
            <param name="channelIdList">서버에서 받은 체널 목록</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionOnChannelInfo">
            <summary>
            커넥션 리스너의 GetChannelInfo() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.Interface.IConnectionOnChannelInfo.OnChannelInfo(GameAnvil.Connection.ConnectionAgent,GameAnvil.Defines.ResultCodeChannelInfo,GameAnvil.Payload)">
            <summary>
            GetChannelInfo() 요청 결과
            </summary>
            <param name="connectionAgent">GetChannelInfo()를 요청한 커넥션 에이전트</param>
            <param name="result">GetChannelInfo() 요청 결과</param>
            <param name="channelInfo">서버에서 받은 체널 정보</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.DelConnectionOnChannelInfo">
            <summary>
            GetChannelInfo() 요청 결과
            </summary>
            <param name="connectionAgent">GetChannelInfo()를 요청한 커넥션 에이전트</param>
            <param name="result">GetChannelInfo() 요청 결과</param>
            <param name="channelInfo">서버에서 받은 체널 정보</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionOnAllChannelInfo">
            <summary>
            커넥션 리스너의 GetAllChannelInfo() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.Interface.IConnectionOnAllChannelInfo.OnAllChannelInfo(GameAnvil.Connection.ConnectionAgent,GameAnvil.Defines.ResultCodeAllChannelInfo,System.Collections.Generic.Dictionary{System.String,GameAnvil.Payload})">
            <summary>
            모든 채널 정보 요청 결과
            </summary>
            <param name="connectionAgent">GetAllChannelInfo()를 요청한 커넥션 에이전트</param>
            <param name="result">GetAllChannelInfo() 요청의 결과</param>
            <param name="channelInfo">서버에서 받은 체널 정보</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.DelConnectionOnAllChannelInfo">
            <summary>
            GetAllChannelInfo() 요청 결과
            </summary>
            <param name="connectionAgent"> GetAllChannelInfo()를 요청한 커넥션 에이전트</param>
            <param name="result">GetAllChannelInfo() 요청의 결과</param>
            <param name="channelInfo">서버에서 받은 체널 정보 목록</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionOnChannelCountInfo">
            <summary>
            유저 리스너의 GetChannelCountInfo() 요청 결과
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.Interface.IConnectionOnChannelCountInfo.OnChannelCountInfo(GameAnvil.Connection.ConnectionAgent,GameAnvil.Defines.ResultCodeChannelCountInfo,GameAnvil.Defines.ChannelCountInfo)">
            <summary>
            GetChannelCountInfo() 요청 결과
            </summary>
            <param name="connectionAgent">GetChannelCountInfo()를 요청한 커넥션 에이전트</param>
            <param name="result">GetChannelCountInfo() 요청 결과</param>
            <param name="channelCountInfo">서버에서 받은 채널의 유저 수와 방 개수 정보</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.DelConnectionOnChannelCountInfo">
            <summary>
            GetChannelCountInfo() 요청 결과
            </summary>
            <param name="connectionAgent">GetChannelCountInfo()를 요청한 커넥션 에이전트</param>
            <param name="result">GetChannelCountInfo() 요청 결과</param>
            <param name="channelCountInfo">서버에서 받은 채널의 유저 수와 방 개수 정보</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionOnAllChannelCountInfo">
            <summary>
            유저 리스너의 GetAllChannelCountInfo() 요청 결과
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.Interface.IConnectionOnAllChannelCountInfo.OnAllChannelCountInfo(GameAnvil.Connection.ConnectionAgent,GameAnvil.Defines.ResultCodeAllChannelCountInfo,System.Collections.Generic.Dictionary{System.String,GameAnvil.Defines.ChannelCountInfo})">
            <summary>
            GetAllChannelCountInfo() 정보 요청 결과
            </summary>
            <param name="connectionAgent">GetAllChannelCountInfo()를 요청한 커넥션 에이전트</param>
            <param name="result">GetAllChannelCountInfo() 요청 결과</param>
            <param name="channelCountInfo">서버에서 받은 채널의 유저 수와 방 개수 정보들</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.DelConnectionOnAllChannelCountInfo">
            <summary>
            GetAllChannelCountInfo() 요청 결과
            </summary>
            <param name="connectionAgent">GetAllChannelCountInfo()를 요청한 커넥션 에이전트</param>
            <param name="result">GetAllChannelCountInfo() 요청 결과</param>
            <param name="channelCountInfo">서버에서 받은 채널의 유저 수와 방 개수 정보들</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionOnDisconnect">
            <summary>
            커넥션 리스너에서 Disconnect() 또는 강제 접속 종료 알림 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.Interface.IConnectionOnDisconnect.OnDisconnect(GameAnvil.Connection.ConnectionAgent,GameAnvil.Defines.ResultCodeDisconnect,System.Boolean,GameAnvil.Payload)">
            <summary>
            Disconnect() 또는 강제 접속 종료 결과 알림
            </summary>
            <param name="connectionAgent">Disconnect()발생한 커넥션 에이전트</param>
            <param name="result">Disconnect() 결과 또는 강제 접속 종료 이유</param>
            <param name="force">종료 강제 여부</param>
            <param name="payload">서버로부터 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.DelConnectionOnDisconnect">
            <summary>
            Disconnect() 알림
            </summary>
            <param name="connectionAgent">Disconnect()발생한 커넥션 에이전트</param>
            <param name="result">>Disconnect() 이유</param>
            <param name="force">강제 종료 여부</param>
            <param name="payload">서버로부터 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.DelOnDisconnect">
            <summary>
            >Disconnect() 결과
            </summary>
            <param name="connectionAgent">Disconnect()발생한 커넥션 에이전트</param>
            <param name="result">>Disconnect() 결과</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionOnErrorCommand">
            <summary>
            커넥션 리스너의 기본 기능 사용중 발생하는 오류 알림 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.Interface.IConnectionOnErrorCommand.OnError(GameAnvil.Connection.ConnectionAgent,GameAnvil.Defines.ErrorCode,GameAnvil.Connection.Defines.Commands)">
            <summary>
            커넥션의 기본 기능 사용중 오류 발생
            </summary>
            <param name="connectionAgent">오류 발생한 커넥션 에이전트</param>
            <param name="errorCode">오류 코드</param>
            <param name="commands">오류 발생 기능</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.DelConnectionOnErrorCommand">
            <summary>
            커넥션의 기본 기능 사용중 오류 발생
            </summary>
            <param name="connectionAgent">오류 발생한 커넥션 에이전트</param>
            <param name="errorCode">오류 코드</param>
            <param name="commands">오류 발생 기능</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionOnErrorCustomCommand">
            <summary>
            커넥션 리스너에서 패킷 전송 후 오류 발생 알림 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.Interface.IConnectionOnErrorCustomCommand.OnError(GameAnvil.Connection.ConnectionAgent,GameAnvil.Defines.ErrorCode,System.String)">
            <summary>
            패킷 전송 후 오류 발생
            </summary>
            <param name="connectionAgent">처리를 요청할 커넥션 에이전트</param>
            <param name="errorCode">오류 코드</param>
            <param name="command">패킷의 메시지 이름</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.DelConnectionOnErrorCustomCommand">
            <summary>
            패킷 전송 후 오류 발생
            </summary>
            <param name="connectionAgent">처리를 요청할 커넥션 에이전트</param>
            <param name="errorCode">오류 코드</param>
            <param name="command">패킷의 메시지 이름</param>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionListener">
            <summary>
            커넥션 에이전트의 모든 결과 및 알림 인터페이스
            </summary>
        </member>
        <member name="T:GameAnvil.Connection.Interface.IConnectionNotificationListener">
            <summary>
            커넥션 에이전트의 서버로부터의 알림 인터페이스
            </summary>
        </member>
        <member name="T:GameAnvil.Connection.ConnectionAgent">
            <summary>
            GameAnvil 서버의 커넥션 노드와 관련된 작업을 담당<para></para>
            접속, 인증 등 기본 세션 관리 기능과 채널 목록 제공<para></para>
            서버 구현에 따라 채널 정보를 제공하거나 사용자 정의 기능을 추가로 제공<para></para>
            커넥터가 초기화 될 때 자동으로 생성되며, 커넥터의 GetConnectionAgent() 함수를 통해 커넥션 에이전트에 접근<para></para>
            기능 요청을 위해 비동기 함수를 호출한 후 동작의 결과를 나중에 전달 받는 방식<para></para>
            리스너와 대리자를 미리 등록해 각 기능 시도 결과를 전달받거나, 기능 요청 시에 대리자를 같이 전달<para></para>
            리스너와 대리자는 여러개 등록 가능
            </summary>
        </member>
        <member name="T:GameAnvil.Connection.ConnectionAgent.LoginedUserInfo">
            <summary>
            인증 성공 시점에 서버에 남아있는 로그인된 유저정보
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.LoginedUserInfo.#ctor(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            로그인 유저 정보 생성
            </summary>
            <param name="serviceName">서비스 이름</param>
            <param name="userId">유저 아이디</param>
            <param name="subId">서브 아이디</param>
            <param name="userType">유저 타입</param>
            <param name="channelId">채널 아이디</param>
        </member>
        <member name="P:GameAnvil.Connection.ConnectionAgent.LoginedUserInfo.ServiceName">
            <summary>
            서버에서 설정한 서비스 이름
            </summary>
        </member>
        <member name="P:GameAnvil.Connection.ConnectionAgent.LoginedUserInfo.UserID">
            <summary>
            유저 아이디
            </summary>
        </member>
        <member name="P:GameAnvil.Connection.ConnectionAgent.LoginedUserInfo.SubId">
            <summary>
            서브 아이디
            </summary>
        </member>
        <member name="P:GameAnvil.Connection.ConnectionAgent.LoginedUserInfo.UserType">
            <summary>
            서버에서 설정한 유저 타입
            </summary>
        </member>
        <member name="P:GameAnvil.Connection.ConnectionAgent.LoginedUserInfo.ChannelId">
            <summary>
            채널 아이디
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.IsConnected">
            <summary>
            접속 여부 확인
            </summary>
            <returns>접속 되어 있는 상태이면 true를, 나머지 경우에 대해 false를 반환</returns>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.IsAuthenticated">
            <summary>
            인증 여부 확인
            </summary>
            <returns>인증되었으면 true를, 나머지 경우에 대해 false를 반환</returns>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.AddConnectionListener(GameAnvil.Connection.Interface.IConnectionListener)">
            <summary>
            커넥션 리스너 등록<para></para>
            커넥션 리스너는 Interface.IConnectionListener를 상속
            </summary>
            <param name="listener">Interface.IConnectionListener를 상속받은 커넥션 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.AddConnectionNotificationListener(GameAnvil.Connection.Interface.IConnectionNotificationListener)">
            <summary>
            커넥션 알람 리스너 등록<para></para>
            커넥션 알람 리스너는 Interface.IConnectionNotificationListener를 상속
            </summary>
            <param name="listener">Interface.IConnectionNotificationListener를 상속받은 커넥션 알람 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.AddConnectionErrorListener(GameAnvil.Connection.Interface.IConnectionOnErrorCommand)">
            <summary>
            커넥션 에러 커멘드 리스너 등록<para></para>
            커넥션 에러 커멘드 리스너는 Interface.IConnectionOnErrorCommand를 상속
            </summary>
            <param name="listener">Interface.IConnectionOnErrorCommand를 상속받은 커넥션 에러 커멘드 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.AddConnectionErrorListener(GameAnvil.Connection.Interface.IConnectionOnErrorCustomCommand)">
            <summary>
            커넥션 에러 커스텀 리스너 등록<para></para>
            커넥션 에러 커스텀 리스너는 Interface.IConnectionOnErrorCustomCommand를 상속
            </summary>
            <param name="listener">Interface.IConnectionOnErrorCustomCommand를 상속받은 커넥션 에러 커스텀 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.ContainsConnectionListener(GameAnvil.Connection.Interface.IConnectionListener)">
            <summary>
            커넥션 리스너가 등록되어 있는지 확인
            </summary>
            <param name="listener">등록 여부를 확인할 커넥션 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.ContainsConnectionNotificationListener(GameAnvil.Connection.Interface.IConnectionNotificationListener)">
            <summary>
            커넥션 알람 리스너가 등록되어 있는지 확인
            </summary>
            <param name="listener">등록 여부를 확인할 커넥션 알람 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.ContainsConnectionErrorListener(GameAnvil.Connection.Interface.IConnectionOnErrorCommand)">
            <summary>
            커넥션 에러 커멘드 리스너가 등록되어 있는지 확인
            </summary>
            <param name="listener">등록 여부를 확인할 커넥션 에러 커멘드 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.ContainsConnectionErrorListener(GameAnvil.Connection.Interface.IConnectionOnErrorCustomCommand)">
            <summary>
            커넥션 에러 커스텀 리스너가 등록되어 있는지 확인
            </summary>
            <param name="listener">등록 여부를 확인할 커넥션 에러 커스텀 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.RemoveConnectionListener(GameAnvil.Connection.Interface.IConnectionListener)">
            <summary>
            커넥션 리스너 등록을 해제
            </summary>
            <param name="listener">등록 해제할 커넥션 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.RemoveConnectionNotificationListener(GameAnvil.Connection.Interface.IConnectionNotificationListener)">
            <summary>
            커넥션 알람 리스너 등록을 해제
            </summary>
            <param name="listener">등록 해제할 커넥션 알람 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.RemoveConnectionErrorListener(GameAnvil.Connection.Interface.IConnectionOnErrorCommand)">
            <summary>
            커넥션 에러 커멘드 리스너 등록을 해제
            </summary>
            <param name="listener">등록 해제할 커넥션 에러 커멘드 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.RemoveConnectionErrorListener(GameAnvil.Connection.Interface.IConnectionOnErrorCustomCommand)">
            <summary>
            커넥션 에러 커스텀 커멘드 리스너 등록을 해제
            </summary>
            <param name="listener">등록 해제할 커넥션 에러 커스텀 커멘드 리스너</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.RemoveAllListeners(System.Boolean)">
            <summary>
            커넥션 리스너를 포함한 모든 리스너 등록을 해제
            </summary>
            <param name="removeConnectionListeners">커넥션 리스터 포함 여부</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.RemoveAllConnectionListeners">
            <summary>
            모든 커넥션 리스너 등록을 해제
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Connect(System.String,System.Int32)">
            <summary>
            GameAnvil 서버에 연결 시도
            </summary>
            <param name="ip">대상 아이피 주소</param>
            <param name="port">대상 포트</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Connect(System.String,System.Int32,GameAnvil.Socket.ISocket)">
            <summary>
            GameAnvil 서버에 연결 시도
            </summary>
            <param name="ip">대상 아이피 주소</param>
            <param name="port">대상 포트</param>
            <param name="socket">연결에 사용할 TCPSecureSocket 또는 TCPSocket</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Connect(System.String,System.Int32,GameAnvil.Connection.Interface.DelConnectionOnConnect)">
            <summary>
            GameAnvil 서버에 연결 시도
            </summary>
            <param name="ip">대상 아이피 주소</param>
            <param name="port">대상 포트</param>
            <param name="onConnect">연결 시도 결과를 전달받을 대리자</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Connect(System.String,System.Int32,GameAnvil.Socket.ISocket,GameAnvil.Connection.Interface.DelConnectionOnConnect)">
            <summary>
            GameAnvil 서버에 연결 시도
            </summary>
            <param name="ip">대상 아이피 주소</param>
            <param name="port">대상 포트</param>
            <param name="socket">연결에 사용할 TCPSecureSocket 또는 TCPSocket</param>
            <param name="onConnect">결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Authenticate(System.String,System.String,System.String)">
            <summary>
            GameAnvil 서버에 인증 요청<para></para>
            인증 성공 후 커넥터 사용 가능
            </summary>
            <param name="deviceId">사용자 기기 식별용 고유 아이디. 서버 구현에 따라 사용하지 않는 경우 빈 문자열 전달</param>
            <param name="accountId">사용자 계정 아이디</param>
            <param name="passwd">사용자 계정 비밀번호. 서버 구현에 따라 사용하지 않는 경우 빈 문자열 전달</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Authenticate(System.String,System.String,System.String,GameAnvil.Payload)">
            <summary>
            GameAnvil 서버에 인증 요청<para></para> 
            인증 성공 후 커넥터 사용 가능
            </summary>
            <param name="deviceId">사용자 기기 식별용 고유 아이디. 서버 구현에 따라 사용하지 않는 경우 빈 문자열 전달</param>
            <param name="accountId">사용자 계정 아이디</param>
            <param name="passwd">사용자 계정 비밀번호. 서버 구현에 따라 사용하지 않는 경우 빈 문자열 전달</param>
            <param name="Payload">추가 정보</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Authenticate(System.String,System.String,System.String,GameAnvil.Connection.Interface.DelConnectionOnAuthentication)">
            <summary>
            GameAnvil 서버에 인증 요청<para></para>
            인증 성공 후 커넥터 사용 가능
            </summary>
            <param name="deviceId">사용자 기기 식별용 고유 아이디. 서버 구현에 따라 사용하지 않는 경우 빈 문자열 전달</param>
            <param name="accountId">사용자 계정을 식별 할 수 있는 고유 아이디</param>
            <param name="passwd">사용자 계정의 비밀번호. 서버 구현에 따라 사용하지 않는 경우 빈 문자열 전달</param>
            <param name="onAuthentication">요청 결과를 전달받을 대리자</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Authenticate(System.String,System.String,System.String,GameAnvil.Payload,GameAnvil.Connection.Interface.DelConnectionOnAuthentication)">
            <summary>
            GameAnvil 서버에 인증 요청<para></para>
            인증 성공 후 커넥터 사용 가능
            </summary>
            <param name="deviceId">사용자 기기 식별용 고유 아이디. 서버 구현에 따라 사용하지 않는 경우 빈 문자열 전달</param>
            <param name="accountId">사용자 계정을 식별 할 수 있는 고유 아이디</param>
            <param name="passwd">사용자 계정의 비밀번호. 서버 구현에 따라 사용하지 않는 경우 빈 문자열 전달</param>
            <param name="payload">추가 정보</param>
            <param name="onAuthentication">요청 결과를 전달받을 대리자</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.GetChannelList(System.String)">
            <summary>
            서비스의 사용 가능한 채널 목록 요청
            </summary>
            <param name="serviceName">대상 서비스의 이름</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.GetChannelList(System.String,GameAnvil.Connection.Interface.DelConnectionOnChannelList)">
            <summary>
            서비스의 사용 가능한 채널 목록 요청 
            </summary>
            <param name="serviceName">대상 서비스의 이름</param>
            <param name="onChannelList">요청 결과를 전달받을 대리자</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.GetChannelInfo(System.String,System.String)">
            <summary>
            채널 정보 요청<para></para>
            서버에서 지원하는 경우 사용 가능
            </summary>
            <param name="serviceName">대상 채널이 속한 서비스의 이름</param>
            <param name="channelId">대상 채널의 아이디</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.GetChannelInfo(System.String,System.String,GameAnvil.Connection.Interface.DelConnectionOnChannelInfo)">
            <summary>
            채널 정보 요청<para></para>
            서버에서 지원하는 경우 사용 가능
            </summary>
            <param name="serviceName">대상 채널이 속한 서비스의 이름</param>
            <param name="channelId">대상 채널의 아이디</param>
            <param name="onChannelInfo">요청 결과를 전달받을 대리자</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.GetAllChannelInfo(System.String)">
            <summary>
            서비스 내 모든 채널의 정보 요청<para></para>
            서버에서 지원하는 경우 사용 가능
            </summary>
            <param name="serviceName">대상 서비스의 이름</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.GetAllChannelInfo(System.String,GameAnvil.Connection.Interface.DelConnectionOnAllChannelInfo)">
            <summary>
            서비스 내 모든 채널의 정보 요청<para></para>
            서버에서 지원하는 경우 사용 가능
            </summary>
            <param name="serviceName">대상 서비스의 이름</param>
            <param name="onAllChannelInfo">요청 결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.GetChannelCountInfo(System.String,System.String)">
            <summary>
            채널의 유저와 방 개수 요청<para></para>
            서버에서 지원하는 경우 사용 가능
            </summary>
            <param name="serviceName">대상 채널이 속한 서비스의 이름</param>
            <param name="channelId">대상 채널의 아이디</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.GetChannelCountInfo(System.String,System.String,GameAnvil.Connection.Interface.DelConnectionOnChannelCountInfo)">
            <summary>
            채널의 유저와 방 개수 요청<para></para>
            서버에서 지원하는 경우 사용 가능
            </summary>
            <param name="serviceName">대상 채널이 속한 서비스의 이름</param>
            <param name="channelId">대상 채널의 아이디</param>
            <param name="onChannelCountInfo">요청 결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.GetAllChannelCountInfo(System.String)">
            <summary>
            서비스 내 모든 채널의 유저와 방 개수 요청<para></para>
            서버에서 지원하는 경우 사용 가능
            </summary>
            <param name="serviceName">대상 서비스의 이름</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.GetAllChannelCountInfo(System.String,GameAnvil.Connection.Interface.DelConnectionOnAllChannelCountInfo)">
            <summary>
            서비스 내 모든 채널의 유저와 방 개수 요청<para></para>
            서버에서 지원하는 경우 사용 가능
            </summary>
            <param name="serviceName">대상 서비스의 이름</param>
            <param name="onAllChannelCountInfo">요청 결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.PauseClientStateCheck(System.Int32)">
            <summary>
            클라이언트 상태 확인을 주어진 시간 만큼 일시정지<para></para>
            앱이 백그라운드로 진입하는 등 메시지 루프가 동작하지 않게 되는 경우 호출하여 GameAnvil서버의 ClientStateCheck기능에 의해 접속이 끊기는것을 방지 
            </summary>
            <param name="pauseTime">클라이언트 상태 확인을 재개하게 되기까지의 시간</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.ResumeClientStateCheck">
            <summary>
            클라이언트 상태 확인 재개<para></para>
            앱이 백그라운드에서 복귀하는 등 메시지 루프가 다시 동작하게 되는 경우 호출
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.IsClientStateCheckPaused">
            <summary>
            클라이언트 상태 확인 일시정지 여부
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Disconnect">
            <summary>
            GameAnvil 서버와의 연결 해제 요청
            </summary>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Disconnect(GameAnvil.Connection.Interface.DelOnDisconnect)">
            <summary>
            GameAnvil 서버와의 연결 해제 요청
            </summary>
            <param name="onDisconnect">요청 결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Request(GameAnvil.Packet)">
            <summary>
            서버로 패킷을 보낸 후 응답 패킷 대기
            미리 등록된 리스너를 통해서 서버로부터의 응답 처리 가능
            </summary>
            <param name="packet">서버로 보낼 패킷</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Request(System.Collections.Generic.List{GameAnvil.Packet})">
            <summary>
            서버로 다수의 패킷을 보낸 후 응답 패킷 대기<para></para>
            미리 등록된 리스너를 통해서 서버로부터의 응답 처리 가능
            </summary>
            <param name="packetList">서버로 보낼 패킷들</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Send(GameAnvil.Packet)">
            <summary>
            서버로 패킷 전송
            </summary>
            <param name="packet">서버로 보낼 패킷</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionAgent.Send(System.Collections.Generic.List{GameAnvil.Packet})">
            <summary>
            서버로 다수의 패킷 전송
            </summary>
            <param name="packetList">서버로 보낼 패킷들</param>
        </member>
        <member name="M:GameAnvil.Connection.ConnectionCommandHandler.AddInstantHandlerForConnect(System.Int32,System.Delegate)">
            <summary>
            Request를 사용하지 않는 Connect를 위한 콜백 등록 함수.
            Connect, Disconnect외에는 Request를 사용해야함.
            </summary>
            <param name="connectSeq">connectSeq</param>
            <param name="del">콜백</param>
        </member>
        <member name="T:GameAnvil.User.Defines.Commands">
            <summary>
            유저에서 사용하는 메세지 정의
            </summary>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnLogin">
            <summary>
            유저 리스너의 Login() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnLogin.OnLogin(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeLogin,GameAnvil.User.UserAgent.LoginInfo)">
            <summary>
            Login() 요청 결과
            </summary>
            <param name="userAgent">Login()을 요청한 유저 에이전트</param>
            <param name="result">Login() 요청 결과</param>
            <param name="loginInfo">로그인 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnLogin">
            <summary>
            Login()의 요청 결과
            </summary>
            <param name="userAgent">Login()을 요청한 유저 에이전트</param>
            <param name="result">Login() 요청 결과</param>
            <param name="loginInfo">로그인 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnMatchRoom">
            <summary>
            유저 리스너의 MatchRoom() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnMatchRoom.OnMatchRoom(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeMatchRoom,System.Int32,System.Int32,System.String,System.Boolean,GameAnvil.Payload)">
            <summary>
            MatchRoom() 요청 결과
            </summary>
            <param name="userAgent">MatchRoom()을 요청한 유저 에이전트</param>
            <param name="result">MatchRoom() 요청 결과</param>
            <param name="resultCode">사용자 결과 코드</param>
            <param name="roomId">매치된 방의 아이디</param>
            <param name="roomName">매치된 방의 이름</param>
            <param name="created">매치된 방의 신설 여부</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnMatchRoom">
            <summary>
            MatchRoom() 요청 결과
            </summary>
            <param name="userAgent">MatchRoom()을 요청한 유저 에이전트</param>
            <param name="result">MatchRoom() 요청 결과</param>
            <param name="resultCode">사용자 결과 코드</param>
            <param name="roomId">매치된 방의 아이디</param>
            <param name="roomName">매치된 방의 이름</param>
            <param name="created">매치된 방의 신설 여부</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnCreateRoom">
            <summary>
            유저 리스너의 CreateRoom() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnCreateRoom.OnCreateRoom(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeCreateRoom,System.Int32,System.String,GameAnvil.Payload)">
            <summary>
            CreateRoom() 요청 결과
            </summary>
            <param name="userAgent">CreateRoom()을 요청한 유저 에이전트</param>
            <param name="result">CreateRoom() 요청 결과</param>
            <param name="roomId">생성된 방의 아이디</param>
            <param name="roomName">생성된 방의 이름</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnCreateRoom">
            <summary>
            CreateRoom() 요청 결과
            </summary>
            <param name="userAgent">CreateRoom()을 요청한 유저 에이전트</param>
            <param name="result"> CreateRoom() 요청 요청 결과</param>
            <param name="roomName">생성된 방의 이름</param>
            <param name="roomId">생성된 방의 아이디</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnJoinRoom">
            <summary>
            유저 리스너의 JoinRoom() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnJoinRoom.OnJoinRoom(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeJoinRoom,System.Int32,System.String,GameAnvil.Payload)">
            <summary>
            JoinRoom() 요청 결과
            </summary>
            <param name="userAgent">JoinRoom()을 요청한 유저 에이전트</param>
            <param name="result">JoinRoom() 요청 결과</param>
            <param name="roomId">입장한 방의 아이디</param>
            <param name="roomName">입장한 방의 이름</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnJoinRoom">
            <summary>
            JoinRoom() 요청 결과
            </summary>
            <param name="userAgent">JoinRoom()을 요청한 유저 에이전트</param>
            <param name="result">JoinRoom() 요청 결과</param>
            <param name="roomId">입장한 방의 아이디</param>
            <param name="roomName">입장한 방의 이름</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnNamedRoom">
            <summary>
            유저 리스너의 NameRoom() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnNamedRoom.OnNamedRoom(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeNamedRoom,System.Int32,System.String,System.Boolean,GameAnvil.Payload)">
            <summary>
            NameRoom() 요청 결과
            </summary>
            <param name="userAgent">NameRoom()을 요청한 유저 에이전트</param>
            <param name="result">NameRoom() 요청 결과</param>
            <param name="roomName">방 이름</param>
            <param name="roomId">입장한 방의 아이디</param>
            <param name="created">입장한 방의 신설 여부</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnNamedRoom">
            <summary>
            NameRoom() 요청 결과
            </summary>
            <param name="userAgent">NameRoom()을 요청한 유저 에이전트</param>
            <param name="result">NameRoom() 요청 결과</param>
            <param name="roomName">방 이름</param>
            <param name="roomId">입장한 방의 아이디</param>
            <param name="created">입장한 방의 신설 여부</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnMatchUserStart">
            <summary>
            유저 리스너의 MatchUserStart() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnMatchUserStart.OnMatchUserStart(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeMatchUserStart,GameAnvil.Payload)">
            <summary>
            MatchUserStart() 결과
            </summary>
            <param name="userAgent">MatchUserStart()를 요청한 유저 에이전트</param>
            <param name="result">MatchUserStart() 요청 결과</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnMatchUserStart">
            <summary>
            MatchUserStart() 요청 결과
            </summary>
            <param name="userAgent">MatchUserStart()를 요청한 유저 에이전트</param>
            <param name="result">MatchUserStart() 요청 결과</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnMatchUserDone">
            <summary>
            유저 리스너의 MatchUserStart()나 MatchPartyStart() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnMatchUserDone.OnMatchUserDone(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeMatchUserDone,System.Boolean,System.Int32,GameAnvil.Payload)">
            <summary>
            MatchUserStart()나 MatchPartyStart() 요청 결과
            </summary>
            <param name="userAgent">MatchUserStart()나 MatchPartyStart()을 요청한 유저 에이전트</param>
            <param name="result">MatchUserStart()나 MatchPartyStart() 요청 결과</param>
            <param name="created">방 신설 여부</param>
            <param name="roomId">매칭된 방의 아이디</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnMatchUserDone">
            <summary>
            MatchUserStart()나 MatchPartyStart() 요청 결과
            </summary>
            <param name="userAgent">MatchUserStart()나 MatchPartyStart()을 요청한 유저 에이전트</param>
            <param name="result">MatchUserStart()나 MatchPartyStart() 요청 결과</param>
            <param name="created">방 신설 여부</param>
            <param name="roomId">매칭된 방의 아이디</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnMatchUserTimeout">
            <summary>
            유저 리스너의 MatchUserStart()나 MatchPartyStart() 타임아웃 알림 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnMatchUserTimeout.OnMatchUserTimeout(GameAnvil.User.UserAgent)">
            <summary>
            MatchUserStart()나 MatchPartyStart() 타임아웃
            </summary>
            <param name="userAgent">MatchUserStart()나 MatchPartyStart()을 요청한 유저 에이전트</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnMatchUserTimeout">
            <summary>
            MatchUserStart()나 MatchPartyStart() 타임아웃
            </summary>
            <param name="userAgent">MatchUserStart()나 MatchPartyStart()을 요청한 유저 에이전트</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnMatchUserCancel">
            <summary>
            유저 리스너의 MatchUserCancel() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnMatchUserCancel.OnMatchUserCancel(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeMatchUserCancel)">
            <summary>
            MatchUserCancel() 결과
            </summary>
            <param name="userAgent">MatchUserCancel()을 요청한 유저 에이전트</param>
            <param name="result">MatchUserCancel() 요청 결과</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnMatchUserCancel">
            <summary>
            MatchUserCancel() 요청 결과
            </summary>
            <param name="userAgent">MatchUserCancel()을 요청한 유저 에이전트</param>
            <param name="result">MatchUserCancel() 요청 결과</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnMatchPartyStart">
            <summary>
            유저 리스너의 MatchPartyStart() 요청 결과를 위한 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnMatchPartyStart.OnMatchPartyStart(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeMatchPartyStart,GameAnvil.Payload)">
            <summary>
            MatchPartyStart() 요청 결과
            </summary>
            <param name="userAgent">MatchPartyStart()을 요청한 유저 에이전트</param>
            <param name="result">MatchPartyStart() 요청 결과</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnMatchPartyStart">
            <summary>
            MatchPartyStart() 요청 결과
            </summary>
            <param name="userAgent">MatchPartyStart()을 요청한 유저 에이전트</param>
            <param name="result">MatchPartyStart() 요청 결과</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnMatchPartyCancel">
            <summary>
            유저 리스너의 MatchPartyCancel() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnMatchPartyCancel.OnMatchPartyCancel(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeMatchPartyCancel)">
            <summary>
            MatchPartyCancel() 요청 결과
            </summary>
            <param name="userAgent">MatchPartyCancel()을 요청한 유저 에이전트</param>
            <param name="result">MatchPartyCancel() 요청 결과</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnLeaveRoom">
            <summary>
            유저 리스너의 LeaveRoom() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnLeaveRoom.OnLeaveRoom(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeLeaveRoom,System.Boolean,System.Int32,GameAnvil.Payload)">
            <summary>
            LeaveRoom() 요청 결과
            </summary>
            <param name="userAgent">LeaveRoom()을 요청한 유저 에이전트</param>
            <param name="result">LeaveRoom() 요청 결과</param>
            <param name="force">강제 퇴장 여부</param>
            <param name="roomId">퇴장한 방의 아이디</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnLeaveRoom">
            <summary>
            LeaveRoom() 요청 결과
            </summary>
            <param name="userAgent">LeaveRoom()을 요청한 유저 에이전트</param>
            <param name="result">LeaveRoom() 요청 결과</param>
            <param name="force">강제 퇴장 여부</param>
            <param name="roomId">퇴장한 방의 아이디</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnChannelInfo">
            <summary>
            유저 리스너의 GetChannelInfo() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnChannelInfo.OnChannelInfo(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeChannelInfo,GameAnvil.Payload)">
            <summary>
            GetChannelInfo() 요청 결과
            </summary>
            <param name="userAgent">GetChannelInfo()를 요청한 유저 에이전트</param>
            <param name="result">GetChannelInfo() 요청 결과</param>
            <param name="channelInfo">서버에서 받은 채널 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnChannelInfo">
            <summary>
            GetChannelInfo() 요청 결과
            </summary>
            <param name="userAgent">GetChannelInfo()를 용청한 유저 에이전트</param>
            <param name="result">GetChannelInfo() 요청 결과</param>
            <param name="channelInfo">서버에서 받은 채널 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnAllChannelInfo">
            <summary>
            유저 리스너의 GeAllChannelInfo() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnAllChannelInfo.OnAllChannelInfo(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeAllChannelInfo,System.Collections.Generic.Dictionary{System.String,GameAnvil.Payload})">
            <summary>
            GeAllChannelInfo() 요청 결과
            </summary>
            <param name="userAgent">GeAllChannelInfo()를 요청한 유저 에이전트</param>
            <param name="result">GeAllChannelInfo() 정보 요청 결과</param>
            <param name="channelInfo">서버에서 받은 채널 정보 목록</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnAllChannelInfo">
            <summary>
            GeAllChannelInfo() 요청 결과
            </summary>
            <param name="userAgent">GeAllChannelInfo()를 요청한 유저 에이전트</param>
            <param name="result">GeAllChannelInfo() 정보 요청 결과</param>
            <param name="channelInfo">서버에서 받은 채널 정보 목록</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnChannelCountInfo">
            <summary>
            유저 리스너의 GetChannelCountInfo() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnChannelCountInfo.OnChannelCountInfo(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeChannelCountInfo,GameAnvil.Defines.ChannelCountInfo)">
            <summary>
            GetChannelCountInfo() 요청 결과
            </summary>
            <param name="userAgent">GetChannelCountInfo()를 요청한 유저 에이전트</param>
            <param name="result">GetChannelCountInfo() 요청 결과</param>
            <param name="channelCountInfo">서버에서 받은채널의 유저 수와 방 개수 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnChannelCountInfo">
            <summary>
            GetChannelCountInfo() 요청 결과
            </summary>
            <param name="userAgent">GetChannelCountInfo()를 요청한 유저 에이전트</param>
            <param name="result">GetChannelCountInfo() 요청 결과</param>
            <param name="channelCountInfo">서버에서 받은 채널의 유저 수와 방 개수 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnAllChannelCountInfo">
            <summary>
            유저 리스너의 GetAllChannelCountInfo() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnAllChannelCountInfo.OnAllChannelCountInfo(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeAllChannelCountInfo,System.Collections.Generic.Dictionary{System.String,GameAnvil.Defines.ChannelCountInfo})">
            <summary>
            GetAllChannelCountInfo() 요청 결과
            </summary>
            <param name="userAgent">GetAllChannelCountInfo()를 요청한 유저 에이전트</param>
            <param name="result">GetAllChannelCountInfo() 요청 결과</param>
            <param name="channelCountInfo">서버에서 받은 채널의 유저 수와 방 개수 정보 목록</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnAllChannelCountInfo">
            <summary>
            GetAllChannelCountInfo() 요청 결과
            </summary>
            <param name="userAgent">GetAllChannelCountInfo()를 요청한 유저 에이전트</param>
            <param name="result">GetAllChannelCountInfo() 요청 결과</param>
            <param name="channelCountInfo">서버에서 받은 채널의 유저 수와 방 개수 정보 목록</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnMoveChannel">
            <summary>
            유저 리스너의 MoveChannel() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnMoveChannel.OnMoveChannel(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeMoveChannel,System.Boolean,System.String,GameAnvil.Payload)">
            <summary>
            MoveChannel() 결과
            </summary>
            <param name="userAgent">MoveChannel()한 유저 에이전트</param>
            <param name="result">MoveChannel() 결과 코드</param>
            <param name="force">서버에서 강제로 체널을 이동했는지 여부</param>
            <param name="channelId">이동한 체널의 아이디</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnMoveChannel">
            <summary>
            MoveChannel() 결과
            </summary>
            <param name="userAgent">MoveChannel()한 유저 에이전트</param>
            <param name="result">MoveChannel() 결과 코드</param>
            <param name="force">서버에서 강제로 채널을 이동했는지 여부</param>
            <param name="channelId">이동한 채널의 아이디</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnSnapshot">
            <summary>
            유저 리스너의 Snapshot() 요청 결과 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnSnapshot.OnSnapshot(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeSnapshot,GameAnvil.Payload)">
            <summary>
            Snapshot() 요청 결과
            </summary>
            <param name="userAgent">Snapshot() 요청한 유저 에이전트</param>
            <param name="result">Snapshot() 요청 결과</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnSnapshot">
            <summary>
            Snapshot() 요청 결과
            </summary>
            <param name="userAgent">Snapshot()한 유저 에이전트</param>
            <param name="result">Snapshot() 요청 결과</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnErrorCommand">
            <summary>
            유저 리스너의 기본 기능 오류 알림 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnErrorCommand.OnError(GameAnvil.User.UserAgent,GameAnvil.Defines.ErrorCode,GameAnvil.User.Defines.Commands)">
            <summary>
            기본 기능 오류 발생
            </summary>
            <param name="userAgent">오류가 발생한 유저 에이전트</param>
            <param name="errorCode">오류 코드</param>
            <param name="command">오류 발생 기능</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnErrorCommand">
            <summary>
            기본 기능 오류 발생
            </summary>
            <param name="userAgent">오류가 발생한 유저 에이전트</param>
            <param name="errorCode">오류 코드</param>
            <param name="command">오류 발생 기능</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnErrorCustomCommand">
            <summary>
            유저 리스너의 패킷 전송 오류 발생 알림 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnErrorCustomCommand.OnError(GameAnvil.User.UserAgent,GameAnvil.Defines.ErrorCode,System.String)">
            <summary>
            패킷 전송 오류 발생
            </summary>
            <param name="userAgent">오류가 발생한 유저 에이전트</param>
            <param name="errorCode">오류 코드</param>
            <param name="command">오류가 발생한 메시지</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnErrorCustomCommand">
            <summary>
            패킷 전송 오류 발생
            </summary>
            <param name="userAgent">오류가 발생한 유저 에이전트</param>
            <param name="errorCode">오류 코드</param>
            <param name="command">오류가 발생한 메시지</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnLogout">
            <summary>
            유저 에이전트의 Logout() 요청 알림 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnLogout.OnLogout(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeLogout,System.Boolean,GameAnvil.Payload)">
            <summary>
            Logout() 결과
            </summary>
            <param name="userAgent">Logout()을 요청한 유저 에이전트</param>
            <param name="result">Logout() 결과</param>
            <param name="force">서버에 의한 강제 여부</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnLogout">
            <summary>
            Logout() 결과
            </summary>
            <param name="userAgent">Logout()을 요청한 유저 에이전트</param>
            <param name="result">Logout() 결과</param>
            <param name="force">서버에 의한 강제 여부</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnNotice">
            <summary>
            유저 리스너의 Notice() 알림 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnNotice.OnNotice(GameAnvil.User.UserAgent,System.String)">
            <summary>
            Notice() 알림
            </summary>
            <param name="userAgent">Notice()를 받은 유저 에이전트</param>
            <param name="message">고지 메시지</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnNotice">
            <summary>
            Notice() 알림
            </summary>
            <param name="userAgent">Notice()를 받은 유저 에이전트</param>
            <param name="message">고지 메시지</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnAdminKickout">
            <summary>
            유저 리스너의 어드민에서 킥아웃 알림 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnAdminKickout.OnAdminKickout(GameAnvil.User.UserAgent,System.String)">
            <summary>
            킥아웃 된 경우 알림
            </summary>
            <param name="userAgent">킥아웃 된 유저 에이전트</param>
            <param name="message">어드민으로부터 받은 메시지</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnAdminKickout">
            <summary>
            어드민에서 킥아웃 된 경우 알림
            </summary>
            <param name="userAgent">킥아웃 된 유저 에이전트</param>
            <param name="message">어드민으로부터 받은 메시지</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserOnSessionClose">
            <summary>
            유저 리스너에서 서버의 세션이 닫힌 경우 알림
            이 알람을 받을 경우 다시 로그인 하여 재시작 한다
            </summary>
        </member>
        <member name="M:GameAnvil.User.Interface.IUserOnSessionClose.OnSessionClose(GameAnvil.User.UserAgent,GameAnvil.Defines.ResultCodeSessionClose,GameAnvil.Payload)">
            <summary>
            유저 리스너에서 서버의 세션이 닫힌 경우 알림<para></para>
            이 알림을 받을 경우 다시 로그인하여 재시작 한다
            </summary>
            <param name="userAgent">세션이 닫힌 유저 에이전트</param>
            <param name="result">세션이 닫힌 이유</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.DelUserOnSessionClose">
            <summary>
            유저 리스너에서 서버의 세션이 닫힌 경우 알림<para></para>
            이 알림을 받을 경우 다시 로그인하여 재시작 한다
            </summary>
            <param name="userAgent">세션이 닫힌 유저 에이전트</param>
            <param name="result">세션이 닫힌 이유</param>
            <param name="payload">서버에서 받은 추가 정보</param>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserListener">
            <summary>
            유저 에이전트의 모든 결과 또는 알림 인터페이스
            </summary>
        </member>
        <member name="T:GameAnvil.User.Interface.IUserNotificationListener">
            <summary>
            유저 에이전트의 서버에서 보내는 알림 인터페이스
            </summary>
        </member>
        <member name="T:GameAnvil.User.UserAgent">
             <summary>
             GameAnvil 서버의 Space Node와 관련된 작업을 담당<para></para>
             로그인(Login()), 로그아웃(Logout()) 및 방 관리 등 기본 기능을 제공하며, 서버 구현에 따라 사용자 정의 기능을 추가적으로 제공<para></para>
             Connector.CreateUserAgent() 함수로 새로운 유저 에이전트를 생성<para></para>
             서비스 이름과 서브아이디로 구분되는 여러개의 유저 에이전트를 생성할 수 있으며 각 유저 에이전트는 독립적으로 사용 가능<para></para>
             생성된 유저 에이전트는 커넥터에서 내부적으로 관리되며 Connector.GetUser()함수로 각 에이전트 객체에 접근 가능<para></para>
            
             UserAgent가 제공하는 기본 기능은 모두 비동기 함수를 통해 제공하며 기능의 결과를 얻기 위한 두 가지 방식이 존재<para></para>
             리스너나 대리자를 미리 등록해 놓고 결과에 대한 알림을 받는 방법과 기능을 사용 할 때 알림을 받을 대리자를 같이 전달하는 방법의 두 가지 방식 제공<para></para>
             두 가지 방법을 혼용해 사용하는 것이 가능, 리스너나 대리자는 여러 개 등록 가능
             </summary>
        </member>
        <member name="T:GameAnvil.User.UserAgent.LoginInfo">
            <summary>
            로그인 유저 정보 
            </summary>
        </member>
        <member name="P:GameAnvil.User.UserAgent.LoginInfo.UserId">
            <summary>
            로그인한 유저의 아이디
            </summary>
        </member>
        <member name="P:GameAnvil.User.UserAgent.LoginInfo.UserType">
            <summary>
            로그인한 유저의 타입
            </summary>
        </member>
        <member name="P:GameAnvil.User.UserAgent.LoginInfo.ServiceName">
            <summary>
            로그인한 서비스의 이름
            </summary>
        </member>
        <member name="P:GameAnvil.User.UserAgent.LoginInfo.ChannelId">
            <summary>
            로그인한 채널의 아이디
            </summary>
        </member>
        <member name="P:GameAnvil.User.UserAgent.LoginInfo.Payload">
            <summary>
            서버로부터 받은 추가정보
            </summary>
        </member>
        <member name="P:GameAnvil.User.UserAgent.LoginInfo.IsRelogined">
            <summary>
            재로그인 여부
            </summary>
        </member>
        <member name="P:GameAnvil.User.UserAgent.LoginInfo.IsJoinedRoom">
            <summary>
            방에 속해있는지 여부
            </summary>
        </member>
        <member name="P:GameAnvil.User.UserAgent.LoginInfo.RoomId">
            <summary>
            유저가 속한 방의 아이디
            </summary>
        </member>
        <member name="P:GameAnvil.User.UserAgent.LoginInfo.RoomName">
            <summary>
            유저가 속한 방의 이름
            </summary>
        </member>
        <member name="P:GameAnvil.User.UserAgent.LoginInfo.RoomPayload">
            <summary>
            유저가 속한 방의 추가정보
            </summary>
        </member>
        <member name="P:GameAnvil.User.UserAgent.LoginInfo.IsMatching">
            <summary>
            매칭을 요청한 상태인지 여부
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onLoginListeners">
            <summary>
            로그인 결과를 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onMatchRoomListeners">
            <summary>
            룸매치 결과를 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onCreateRoomListeners">
            <summary>
            방 생성 요청 결과를 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onJoinRoomListeners">
            <summary>
            방 입장 요청 결과를 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onNamedRoomListeners">
            <summary>
            이름 있는 방 요청 결과를 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onMatchPartyStartListeners">
            <summary>
            파티 매칭 요쳥 결과를 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onMatchPartyCancelListeners">
            <summary>
            파티 매칭 요청 취소 결과를 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onMatchUserStartListeners">
            <summary>
            유저 매칭 요청 결과를 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onMatchUserDoneListeners">
            <summary>
            유저 매칭 결과를 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onMatchUserTimeoutListeners">
            <summary>
            유저 매칭 타임아웃 알림 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onMatchUserCancelListeners">
            <summary>
            유저 매칭 취소 결과를 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onLeaveRoomListeners">
            <summary>
            방 퇴장 또는 강제 퇴장 알림을 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onChannelInfoListeners">
            <summary>
            채널 정보 요청 결과 또는 서버에서 강제로 수행한 채널 이동에 대한 알림을 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onAllChannelInfoListeners">
            <summary>
            모든 채널 정보 목록 요청 결과 또는 서버에서 강제로 수행한 채널 이동에 대한 알림을 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onChannelCountInfoListeners">
            <summary>
            채널 정보 요청 결과 또는 서버에서 강제로 수행한 채널 이동에 대한 알림을 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onAllChannelCountInfoListeners">
            <summary>
            모든 채널 정보 요청 결과 또는 서버에서 강제로 수행한 채널 이동에 대한 알림을 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onMoveChannelListeners">
            <summary>
            채널 이동 요청 결과 또는 서버에서 강제로 수행한 채널 이동에 대한 알림을 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onSnapshotListeners">
            <summary>
            스냅샷 요청 결과를 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onErrorCommandListeners">
            <summary>
            기본 기능 사용중 오류 발생시 알림을 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onErrorCustomCommandListeners">
            <summary>
            패킷 전송 오류 발생시 알림을 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onLogoutListeners">
            <summary>
            로그아웃 요청 결과 또는 강제 로그아웃 알림을 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onNoticeListeners">
            <summary>
            고지 알림을 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onAdminKickoutListeners">
            <summary>
            킥아웃 알림을 받을 대리자
            </summary>
        </member>
        <member name="F:GameAnvil.User.UserAgent.onSessionCloseListeners">
            <summary>
            서버의 세션이 닫힌 경우 알림을 받을 대리자
            </summary>
        </member>
        <member name="M:GameAnvil.User.UserAgent.SetUserData(System.Object)">
            <summary>
            임의의 데이터를 설정
            </summary>
            <param name="userData">임의의 데이터</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetChannelId">
            <summary>
            로그인한 체널의 아이디
            </summary>
            <returns>로그인한 체널의 아이디</returns>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetUserData">
            <summary>
            SetUserData()로 설정한 임의의 데이터
            </summary>
            <returns>설정된 임의의 데이터</returns>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetUserType">
            <summary>
            로그인한 유저 타입 반환
            </summary>
            <returns>로그인한 유저 타입</returns>
        </member>
        <member name="M:GameAnvil.User.UserAgent.CreateRoom(System.String)">
            <summary>
            임의의 방 생성 후 해당 방에 입장
            </summary>
            <param name="roomType">생성할 방의 타입</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.CreateRoom(System.String,System.String)">
            <summary>
            임의의 방 생성 후 해당 방에 입장
            </summary>
            <param name="roomName">생성할 방 이름</param>
            <param name="roomType">생성할 방의 타입</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.CreateRoom(System.String,GameAnvil.Payload)">
            <summary>
            임의의 방 생성 후 해당 방에 입장
            </summary>
            <param name="roomType">생성할 방의 타입</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.CreateRoom(System.String,System.String,GameAnvil.Payload)">
            <summary>
            임의의 방 생성 후 해당 방에 입장
            </summary>
            <param name="roomName">생성할 방 이름</param>
            <param name="roomType">생성할 방의 타입</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.CreateRoom(System.String,System.String,System.String,GameAnvil.Payload)">
            <summary>
            임의의 방 생성 후 해당 방에 입장
            </summary>
            <param name="roomName">생성할 방 이름</param>
            <param name="roomType">생성할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.CreateRoom(System.String,GameAnvil.User.Interface.DelUserOnCreateRoom)">
            <summary>
            임의의 방 생성 후 해당 방에 입장
            </summary>
            <param name="roomType">생성할 방의 타입</param>
            <param name="onCreateRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.CreateRoom(System.String,System.String,GameAnvil.User.Interface.DelUserOnCreateRoom)">
            <summary>
            임의의 방 생성 후 해당 방에 입장
            </summary>
            <param name="roomName">생성할 방 이름</param>
            <param name="roomType">생성할 방의 타입</param>
            <param name="onCreateRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.CreateRoom(System.String,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnCreateRoom)">
            <summary>
            임의의 방 생성 후 해당 방에 입장
            </summary>
            <param name="roomType">생성할 방의 타입</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onCreateRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.CreateRoom(System.String,System.String,System.String,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnCreateRoom)">
            <summary>
            임의의 방 생성 후 해당 방에 입장
            </summary>
            <param name="roomName">생성할 방의 이름</param>
            <param name="roomType">생성할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onCreateRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.LeaveRoom">
            <summary>
            유저 에이전트가 속한 방에서 퇴장
            </summary>
        </member>
        <member name="M:GameAnvil.User.UserAgent.LeaveRoom(GameAnvil.Payload)">
            <summary>
            유저 에이전트가 속한 방에서 퇴장
            </summary>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.LeaveRoom(GameAnvil.User.Interface.DelUserOnLeaveRoom)">
            <summary>
            유저 에이전트가 속한 방에서 퇴장
            </summary>
            <param name="onLeaveRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.LeaveRoom(GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnLeaveRoom)">
            <summary>
            유저 에이전트가 속한 방에서 퇴장
            </summary>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onLeaveRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.Boolean)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.String,System.Boolean)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="matchingUserCategory">매칭시 사용할 매칭 유저 카테고리</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.Boolean,GameAnvil.User.Interface.DelUserOnMatchRoom)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리
            </summary>
            <param name="roomType">입장할 방의 방 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            /// <param name="onMatchRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.String,System.Boolean,GameAnvil.User.Interface.DelUserOnMatchRoom)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="matchingUserCategory">매칭시 사용할 매칭 유저 카테고리</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            /// <param name="onMatchRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.Boolean,GameAnvil.Payload)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.String,System.Boolean,GameAnvil.Payload)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="matchingUserCategory">매칭시 사용할 매칭 유저 카테고리</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.Boolean,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnMatchRoom)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onMatchRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.String,System.Boolean,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnMatchRoom)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="matchingUserCategory">매칭시 사용할 매칭 유저 카테고리</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onMatchRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리<para></para>
            방에 속해 있는 경우, 이동하거나 매칭 실패 처리
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="isMoveRoomIfJoinedRoom">방 이동 허용</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리<para></para>
            방에 속해 있는 경우, 이동하거나 매칭 실패 처리
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="matchingUserCategory">매칭시 사용할 매칭 유저 카테고리</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="isMoveRoomIfJoinedRoom">방 이동 허용</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.Boolean,System.Boolean,GameAnvil.User.Interface.DelUserOnMatchRoom)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리<para></para>
            방에 속해 있는 경우, 이동하거나 매칭 실패 처리
            </summary>
            <param name="roomType">매칭할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="isMoveRoomIfJoinedRoom">방 이동 허용</param>
            <param name="onMatchRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.String,System.Boolean,System.Boolean,GameAnvil.User.Interface.DelUserOnMatchRoom)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리<para></para>
            방에 속해 있는 경우, 이동하거나 매칭 실패 처리
            </summary>
            <param name="roomType">매칭할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="matchingUserCategory">매칭시 사용할 매칭 그룹</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="isMoveRoomIfJoinedRoom">방 이동 허용</param>
            <param name="onMatchRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.Boolean,System.Boolean,GameAnvil.Payload)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리<para></para>
            방에 속해 있는 경우, 이동하거나 매칭 실패 처리
            </summary>
            <param name="roomType">매칭할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="isMoveRoomIfJoinedRoom">방 이동 허용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.String,System.Boolean,System.Boolean,GameAnvil.Payload)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리<para></para>
            방에 속해 있는 경우, 이동하거나 매칭 실패 처리
            </summary>
            <param name="roomType">매칭할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="matchingUserCategory">매칭시 사용할 매치 유저 카테고리</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="isMoveRoomIfJoinedRoom">방 이동 허용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.Boolean,System.Boolean,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnMatchRoom)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리<para></para>
            방에 속해 있는 경우, 이동하거나 매칭 실패 처리
            </summary>
            <param name="roomType">매칭할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="isMoveRoomIfJoinedRoom">방 이동 허용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onMatchRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.String,System.Boolean,System.Boolean,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnMatchRoom)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리<para></para>
            방에 속해 있는 경우, 이동하거나 매칭 실패 처리
            </summary>
            <param name="roomType">매칭할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="matchingUserCategory">매칭시 사용할 매칭 유저 카테고리</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="isMoveRoomIfJoinedRoom">방 이동 허용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onMatchRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.Boolean,System.Boolean,GameAnvil.Payload,GameAnvil.Payload)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리<para></para>
            방에 속해 있는 경우, 이동하거나 매칭 실패 처리
            </summary>
            <param name="roomType">매칭할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="isMoveRoomIfJoinedRoom">방 이동 허용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="leaveRoomPayload">입장한 방을 떠날때 서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.String,System.Boolean,System.Boolean,GameAnvil.Payload,GameAnvil.Payload)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리<para></para>
            방에 속해 있는 경우, 이동하거나 매칭 실패 처리
            </summary>
            <param name="roomType">매칭할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭 그룹</param>
            <param name="matchingUserCategory">매칭시 사용할 매칭 유저 카테고리</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="isMoveRoomIfJoinedRoom">방 이동 허용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="leaveRoomPayload">입장한 방을 떠날때 서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchRoom(System.String,System.String,System.String,System.Boolean,System.Boolean,GameAnvil.Payload,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnMatchRoom)">
            <summary>
            룸 매칭 요청<para></para>
            방이 없을 경우, 임의의 방을 생성하고 해당 방에 입장하거나 매칭 실패 처리<para></para>
            방에 속해 있는 경우, 이동하거나 매칭 실패 처리
            </summary>
            <param name="roomType">매칭할 방의 타입</param>
            <param name="matchingGroup">매칭할 방의 매칭</param>
            <param name="matchingUserCategory">매칭시 사용할 매칭 유저 카테고리</param>
            <param name="isCreateRoomIfNotJoinRoom">방 생성 허용</param>
            <param name="isMoveRoomIfJoinedRoom">방 이동 허용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="leaveRoomPayload">입장한 방을 떠날때 서버에 전달할 추가 정보</param>
            <param name="onMatchRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.NamedRoom(System.String,System.String,System.Boolean)">
            <summary>
            지정한 이름의 방에 입장<para></para>
            지정한 이름의 방이 없을 경우 지정한 이름의 방을 생성하고 해당 방에 입장
            </summary>
            <param name="roomType">입장하고자 방의 타입</param>
            <param name="roomName">입장하고자 하는 방의 이름</param>
            <param name="isParty">파티 여부</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.NamedRoom(System.String,System.String,System.Boolean,GameAnvil.Payload)">
            <summary>
            지정한 이름의 방에 입장<para></para>
            지정한 이름의 방이 없을 경우 지정한 이름의 방을 생성하고 해당 방에 입장
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="roomName">입장하고자 하는 방의 이름</param>
            <param name="isParty">파티 여부</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.NamedRoom(System.String,System.String,System.Boolean,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnNamedRoom)">
            <summary>
            지정한 이름의 방에 입장<para></para>
            지정한 이름의 방이 없을 경우 지정한 이름의 방을 생성하고 해당 방에 입장
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="roomName">입장하고자 하는 방의 이름</param>
            <param name="isParty">파티 여부</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onNamedRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchUserStart(System.String,System.String)">
            <summary>
            유저 매칭 요청<para></para>
            이미 방에 입장한 경우 등 서버의 조건에 따라 요청이 실패<para></para>
            매칭이 성공한 경우 OnMatchUserDone()을 통해 알림
            </summary>
            <param name="roomType">매치를 요청할 방의타입</param>
            <param name="matchingGroup">방 생성 시 사용될 매칭그룹</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchUserStart(System.String,System.String,GameAnvil.Payload)">
            <summary>
            유저 매칭을 요청<para></para>
            이미 방에 입장한 경우 등 서버의 조건에 따라 요청이 실패<para></para>
            매칭이 성공한 경우 OnMatchUserDone()을 통해 알림
            </summary>
            <param name="roomType">매치를 요청할 방의 타입</param>
            <param name="matchingGroup">방 생성 시 사용될 매칭그룹</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchUserStart(System.String,System.String,GameAnvil.User.Interface.DelUserOnMatchUserStart)">
            <summary>
            유저 매칭을 요청<para></para>
            이미 방에 입장한 경우 등 서버의 조건에 따라 요청이 실패<para></para>
            매칭이 성공한 경우 OnMatchUserDone()을 통해 알림
            </summary>
            <param name="roomType">매치를 요청할 방의 타입</param>
            <param name="matchingGroup">방 생성 시 사용될 매칭그룹</param>
            <param name="onMatchUserStart">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchUserStart(System.String,System.String,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnMatchUserStart)">
            <summary>
            유저 매칭을 요청<para></para>
            이미 방에 입장한 경우 등 서버의 조건에 따라 요청이 실패<para></para>
            매칭이 성공한 경우 OnMatchUserDone()을 통해 알림<para></para>
            </summary>
            <param name="roomType">매치를 요청할 방의 타입</param>
            <param name="matchingGroup">방 생성 시 사용될 매칭그룹</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onMatchUserStart">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchUserCancel(System.String)">
            <summary>
            유저 매칭 요청을 취소<para></para>
            매치 요청중이 아닌경우, 이미 매칭이 성공했거나 타임아웃이 발생했을 경우 실패
            </summary>
            <param name="roomType">매치를 요청한 방의 타입</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchUserCancel(System.String,GameAnvil.User.Interface.DelUserOnMatchUserCancel)">
            <summary>
            유저 매칭 요청을 취소<para></para>
            매치 요청중이 아닌경우, 이미 매칭이 성공했거나 타임아웃이 발생했을 경우 실패<para></para>
            </summary>
            <param name="roomType">매치를 요청한 바의 타입</param>
            <param name="onMatchUserCancel">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchPartyStart(System.String,System.String,GameAnvil.Payload)">
            <summary>
            파티 매칭을 요청<para></para>
            이미 방에 입장한 경우 등 서버의 조건에 따라 요청이 실패<para></para>
            매칭이 성공한 경우 OnMatchUserDone()을 통해 알림
            </summary>
            <param name="roomType">매치를 요청할 방의 타입</param>
            <param name="matchingGroup">방 생성 시 사용될 매팅그룹</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchPartyStart(System.String,System.String,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnMatchPartyStart)">
            <summary>
            파티 매칭을 요청<para></para>
            이미 방에 입장한 경우 등 서버의 조건에 따라 요청이 실패<para></para>
            매칭이 성공한 경우 OnMatchUserDone()을 통해 알림
            </summary>
            <param name="roomType">매치를 요청할 방의 타입</param>
            <param name="matchingGroup">방 생성 시 사용될 매칭그룹</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onMatchPartyStart">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchPartyCancel(System.String)">
            <summary>
            파티 매칭 요청을 취소<para></para>
            매치 요청중이 아닌경우, 이미 매칭이 성공했거나 타임아웃이 발생했을 경우 실패
            </summary>
            <param name="roomType">매치를 요청한 방의 타입</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MatchPartyCancel(System.String,GameAnvil.User.Interface.DelUserOnMatchPartyCancel)">
            <summary>
            파티 매칭 요청을 취소<para></para>
            매치 요청중이 아닌경우, 이미 매칭이 성공했거나 타임아웃이 발생했을 경우 실패
            </summary>
            <param name="roomType">매치를 요청한 방의 타입</param>
            <param name="onMatchPartyCancel">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.IsUserMatchInProgress">
            <summary>
            유저 매칭 요청 여부 확인
            </summary>
        </member>
        <member name="M:GameAnvil.User.UserAgent.IsPartyMatchInProgress">
            <summary>
            파티 매칭 요청 여부 확인
            </summary>
        </member>
        <member name="M:GameAnvil.User.UserAgent.IsMatchInProgress">
            <summary>
            매칭 요청 여부를 확인
            </summary>
        </member>
        <member name="M:GameAnvil.User.UserAgent.JoinRoom(System.String,System.Int32)">
            <summary>
            지정한 아이디의 방에 입장<para></para>
            지정한 아이디의 방이 없을 경우 실패
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="roomId">입장하고자 하는 방의 아이디</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.JoinRoom(System.String,System.Int32,System.String)">
            <summary>
            지정한 아이디의 방에 입장<para></para>
            지정한 아이디의 방이 없을 경우 실패
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="roomId">입장하고자 하는 방의 i아이디</param>
            <param name="matchingUserCategory">룸매칭을 사용중인 방에 입장할 경우 사용</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.JoinRoom(System.String,System.Int32,GameAnvil.Payload)">
            <summary>
            지정한 아이디의 방에 입장<para></para>
            지정한 아이디의 방이 없을 경우 실패
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="roomId">입장하고자 하는 방의 아이디</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.JoinRoom(System.String,System.Int32,System.String,GameAnvil.Payload)">
            <summary>
            지정한 아이디의 방에 입장<para></para>
            지정한 아이디의 방이 없을 경우 실패
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="roomId">입장하고자 하는 방의 아읻</param>
            <param name="matchingUserCategory">룸매칭을 사용중인 방에 입장할 경우 사용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.JoinRoom(System.String,System.Int32,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnJoinRoom)">
            <summary>
            지정한 아이디의 방에 입장<para></para>
            지정한 아이디의 방이 없을 경우 실패
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="roomId">입장하고자 하는 방의 아이디</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onJoinRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.JoinRoom(System.String,System.Int32,System.String,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnJoinRoom)">
            <summary>
            지정한 아이디의 방에 입장<para></para>
            지정한 아이디의 방이 없을 경우 실패
            </summary>
            <param name="roomType">입장할 방의 타입</param>
            <param name="roomId">입장하고자 하는 방의 아이디</param>
            <param name="matchingUserCategory">룸매칭을 사용중인 방에 입장할 경우 사용</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onJoinRoom">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.IsJoinedRoom">
            <summary>
            방에 입장했는지 여부
            </summary>
            <returns>방에 입장했을 경우 true, 아닐경우 false</returns>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Snapshot">
            <summary>
            현재 유저의 스냅샷 정보<para></para>
            재접속 등 유저의 모든 정보를 갱싱해야 할 필요가 있을때 사용<para></para>
            서버 구현에 따라 내용이 다름
            </summary>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Snapshot(GameAnvil.Payload)">
            <summary>
            현재 유저의 스냅샷 정보<para></para>
            재접속 등 유저의 모든 정보를 갱싱해야 할 필요가 있을때 사용<para></para>
            서버 구현에 따라 내용이 다름
            </summary>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Snapshot(GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnSnapshot)">
            <summary>
            현재 유저의 스냅샷 정보<para></para>
            재접속 등 유저의 모든 정보를 갱싱해야 할 필요가 있을때 사용<para></para>
            서버 구현에 따라 내용이 다름
            </summary>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onSnapshot">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetChannelInfo">
            <summary>
            접속중인 채널 정보를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetChannelInfo(System.String,System.String)">
            <summary>
            특정 채널의 정보를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="serviceName">채널 정보를 요청할 서비스의 이름</param>
            <param name="channelId">채널 정보를 요청할 체널의 아이디</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetChannelInfo(GameAnvil.User.Interface.DelUserOnChannelInfo)">
            <summary>
            접속중인 채널 정보를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="onChannelInfo">결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetChannelInfo(System.String,System.String,GameAnvil.User.Interface.DelUserOnChannelInfo)">
            <summary>
            특정 채널의 정보를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="serviceName">채널 정보를 요청할 서비스의 이름</param>
            <param name="channelId">채널 정보를 요청할 체널의 아이디</param>
            <param name="onChannelInfo">결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetAllChannelInfo">
            <summary>
            접속중인 서비스의 모든 채널정보 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetAllChannelInfo(System.String)">
            <summary>
            특정 서비스의 모든 채널정보 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="serviceName">채널 정보를 요청할 서비스의 이름</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetAllChannelInfo(GameAnvil.User.Interface.DelUserOnAllChannelInfo)">
            <summary>
            접속중인 서비스의 모든 채널정보 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="onAllChannelInfo">결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetAllChannelInfo(System.String,GameAnvil.User.Interface.DelUserOnAllChannelInfo)">
            <summary>
            특정 서비스의 모든 채널정보 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="serviceName">채널 정보를 요청할 서비스의 이름</param>
            <param name="onAllChannelInfo">결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetChannelCountInfo">
            <summary>
            접속중인 채널의 유저와 방의 개수를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetChannelCountInfo(System.String,System.String)">
            <summary>
            특정 채널의 유저와 방의 개수를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="serviceName">채널 정보를 요청할 서비스의 이름</param>
            <param name="channelId">채널 정보를 요청할 체널의 아이디</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetChannelCountInfo(GameAnvil.User.Interface.DelUserOnChannelCountInfo)">
            <summary>
            접속중인 채널의 유저와 방의 개수를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="onChannelCountInfo">결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetChannelCountInfo(System.String,System.String,GameAnvil.User.Interface.DelUserOnChannelCountInfo)">
            <summary>
            특정 채널의 유저와 방의 개수를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="serviceName">채널 정보를 요청할 서비스의 이름</param>
            <param name="channelId">채널 정보를 요청할 체널의 아이디</param>
            <param name="onChannelCountInfo">결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetAllChannelCountInfo">
            <summary>
            접속중인 서비스에 있는 모든 채널의 유저와 방의 개수를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetAllChannelCountInfo(System.String)">
            <summary>
            특정 서비스에 있는 모든 채널의 유저와 방의 개수를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="serviceName">채널 정보를 요청할 서비스의 이름</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetAllChannelCountInfo(GameAnvil.User.Interface.DelUserOnAllChannelCountInfo)">
            <summary>
            접속중인 서비스에 있는 모든 채널의 유저와 방의 개수를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="onAllChannelCountInfo">결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.GetAllChannelCountInfo(System.String,GameAnvil.User.Interface.DelUserOnAllChannelCountInfo)">
            <summary>
            특정 서비스에 있는 모든 채널의 유저와 방의 개수를 요청<para></para>
            서버에서 지원할 경우 사용할 수 있음
            </summary>
            <param name="serviceName">채널 정보를 요청할 서비스의 이름</param>
            <param name="onAllChannelCountInfo">결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MoveChannel(System.String)">
            <summary>
            지정한 채널로 이동
            </summary>
            <param name="channelId">이동할 채널의 아이디</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MoveChannel(System.String,GameAnvil.Payload)">
            <summary>
            지정한 채널로 이동
            </summary>
            <param name="channelId">이동할 채널의 아이디</param>
            <param name="payload">서버에 전달할 추가 정보</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.MoveChannel(System.String,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnMoveChannel)">
            <summary>
            지정한 채널로 이동
            </summary>
            <param name="channelId">이동할 채널의 아이디</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="onMoveChannel">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Login(System.String)">
            <summary>
            서비스에 로그인
            </summary>
            <param name="userType">유저의 타입</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Login(System.String,GameAnvil.User.Interface.DelUserOnLogin)">
            <summary>
            서비스에 로그인
            </summary>
            <param name="userType">유저의 타입</param>
            <param name="onLogin">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Login(System.String,System.String,GameAnvil.Payload)">
            <summary>
            서비스에 로그인
            </summary>
            <param name="userType">유저의 타입</param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="channelId">로그인할 채널의 아이디</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Login(System.String,System.String,GameAnvil.Payload,GameAnvil.User.Interface.DelUserOnLogin)">
            <summary>
            서비스에 로그인
            </summary>
            <param name="userType">유저의 타입 </param>
            <param name="payload">서버에 전달할 추가 정보</param>
            <param name="channelId">로그인할 채널의 아이디</param>
            <param name="onLogin">결과를 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.IsLoggedIn">
            <summary>
            로그인 여부를 확인
            </summary>
            <returns>로그인 한경우 true, 아닐경우 false</returns>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Logout">
            <summary>
            현재 서비스에서 로그아웃
            </summary>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Logout(GameAnvil.User.Interface.DelUserOnLogout)">
            <summary>
            현재 서비스에서 로그아웃 
            </summary>
            <param name="onLogout">로그아웃 다리자</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Request(GameAnvil.Packet)">
            <summary>
            서버로 패킥을 보내고, 응답을 대기<para></para>
            AddListener()로 서버에서 응답으로 보낸 패킷을 처리할 리스너를 등록해야 응답을 처리할 수 있음
            </summary>
            <param name="packet">서버로 보낼 패킷</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Request(System.Collections.Generic.List{GameAnvil.Packet})">
            <summary>
            서버로 패킷 목록을 보내고, 응답을 대기<para></para>
            AddListener()로 서버에서 응답으로 보낸 패킷을 처리할 리스너를 등록해야 응답을 처리할 수 있음
            </summary>
            <param name="packetList">서버로 보낼 패킷 목록</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Send(GameAnvil.Packet)">
            <summary>
            서버로 패킷을 전송
            </summary>
            <param name="packet">서버로 보낼 패킷</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.Send(System.Collections.Generic.List{GameAnvil.Packet})">
            <summary>
            서버로 패킷 목록을 전송
            </summary>
            <param name="packetList">서버로 보낼 패킷 목록</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.AddUserListener(GameAnvil.User.Interface.IUserListener)">
            <summary>
            Interface.IUserListener를 상속받은 리스너를 등록
            </summary>
            <param name="listener">Interface.IUserListener를 상속받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.AddUserNotificationListener(GameAnvil.User.Interface.IUserNotificationListener)">
            <summary>
            Interface.IUserNotificationListener 상속받은 리스너를 등록
            </summary>
            <param name="listener">Interface.IUserNotificationListener를 상속받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.AddUserErrorListener(GameAnvil.User.Interface.IUserOnErrorCommand)">
            <summary>
            Interface.IUserOnErrorCommand를 상속받은 리스너를 등록
            </summary>
            <param name="listener">Interface.IUserOnErrorCommand 상속받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.AddUserErrorListener(GameAnvil.User.Interface.IUserOnErrorCustomCommand)">
            <summary>
            Interface.IUserOnErrorCustomCommand를 상속받은 리스너를 등록
            </summary>
            <param name="listener">Interface.IUserOnErrorCommand 상속받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.ContainsUserListener(GameAnvil.User.Interface.IUserListener)">
            <summary>
            Interface.IUserListener를 상속받은 리스너가 등록되었는지 확인
            </summary>
            <param name="listener">Interface.IUserListener를 상속받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.ContainsUserNotificationListener(GameAnvil.User.Interface.IUserNotificationListener)">
            <summary>
            Interface.IUserNotificationListener 상속받은 리스너가 등록되었는지 확인
            </summary>
            <param name="listener">Interface.IUserNotificationListener를 상속받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.ContainsUserErrorListener(GameAnvil.User.Interface.IUserOnErrorCommand)">
            <summary>
            Interface.IUserOnErrorCommand를 상속받은 리스너가 등록되었는지 확인
            </summary>
            <param name="listener">Interface.IUserOnErrorCommand 상속받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.ContainsUserErrorListener(GameAnvil.User.Interface.IUserOnErrorCustomCommand)">
            <summary>
            Interface.IUserOnErrorCustomCommand를 상속받은 리스너가 등록되었는지 확인
            </summary>
            <param name="listener">Interface.IUserOnErrorCommand 상속받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.RemoveUserListener(GameAnvil.User.Interface.IUserListener)">
            <summary>
            등록한 Interface.IUserListener 상속받은 리스너 등록 해제
            </summary>
            <param name="listener">Interface.IUserListener 상속받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.RemoveUserNotificationListener(GameAnvil.User.Interface.IUserNotificationListener)">
            <summary>
            등록한 Interface.IUserNotificationListener 상속받은 리스너 등록 해제
            </summary>
            <param name="listener">등록한 Interface.IUserNotificationListener 상속받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.RemoveUserErrorListener(GameAnvil.User.Interface.IUserOnErrorCommand)">
            <summary>
            등록한 Interface.IUserOnErrorCommand 상속받은 리스너 등록 해제
            </summary>
            <param name="listener">등록한 Interface.IUserOnErrorCommand 상속 받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.RemoveUserErrorListener(GameAnvil.User.Interface.IUserOnErrorCustomCommand)">
            <summary>
            등록한 Interface.IUserOnErrorCustomCommand 상속받은 리스너 등록 해제
            </summary>
            <param name="listener">등록한 Interface.IUserOnErrorCustomCommand 상복받은 리스너</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.RemoveAllListeners(System.Boolean)">
            <summary>
            등록한 모든 리스너를 등록 해제
            </summary>
            <param name="removeUserListeners">true 일 경우 등록한 모든 IUserListener도 같이 등록 해제 (default : true)</param>
        </member>
        <member name="M:GameAnvil.User.UserAgent.RemoveAllUserListeners">
            <summary>
            등록한 모든 유저리스너를 등록 해제
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ChannelCountInfo">
            <summary>
            채널의 유저수와 룸 수를 가지고 있는 클래스
            </summary>
        </member>
        <member name="M:GameAnvil.Defines.ChannelCountInfo.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            채널 유저수와 룸 수 데이터 생성자
            </summary>
            <param name="channelId">채널 아이디</param>
            <param name="userCount">유저 수</param>
            <param name="roomCount">룸 수</param>
        </member>
        <member name="M:GameAnvil.Defines.ChannelCountInfo.GetChannelId">
            <summary>
            채널 아이디 반환
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.Defines.ChannelCountInfo.GetUserCount">
            <summary>
            유저 숫자 반환
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.Defines.ChannelCountInfo.GetRoomCount">
            <summary>
            훔 숫자 반환
            </summary>
            <returns></returns>
        </member>
        <member name="T:GameAnvil.Defines.ID">
            <summary>
            아이지 정의 클래스
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ID.EMPTY">
            <summary>
            기본감 0 상수 정의
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ErrorCode">
            <summary>
            시스템 에러 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ErrorCode.TIMEOUT">
            <summary>
            타임 아웃
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ErrorCode.SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ErrorCode.SYSTEM_ERROR">
            <summary>
            서버 시스템 에러
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeConnect">
            <summary>
            Connect() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeConnect.CONNECT_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeConnect.CONNECT_FAIL">
            <summary>
            실패
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeConnect.CONNECT_ALREADY_CONNECTED">
            <summary>
            실패. 이미 연결되어있음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeConnect.CONNECT_ALREADY_REQUEST">
            <summary>
            실패. 이미 연결 시도중임
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeConnect.CONNECT_FAIL_INVALID_IP">
            <summary>
            실패. 잘못된 IP 입력
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeAuth">
            <summary>
            Authenticate() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeAuth.AUTH_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeAuth.AUTH_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeAuth.AUTH_FAIL_INVALID_ACCOUNT_ID">
            <summary>
            실패. 잘못된 인증 계정 아이디
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeCreateRoom">
            <summary>
            CreateRoom() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeCreateRoom.CREATE_ROOM_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeCreateRoom.CREATE_ROOM_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeCreateRoom.CREATE_ROOM_FAIL_ALREADY_JOINED_ROOM">
            <summary>
            실패. 이미 방에 들어가 있음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeCreateRoom.CREATE_ROOM_FAIL_CREATE_ROOM_ID">
            <summary>
            실패. 방 아이디 발급 실패
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeCreateRoom.CREATE_ROOM_FAIL_CREATE_ROOM">
            <summary>
            실패. 방 생성 실패
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeChannelInfo">
            <summary>
            GetChannelInfo() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelInfo.CHANNEL_INFO_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelInfo.CHANNEL_INFO_FAIL_NO_CHANNEL_INFO">
            <summary>
            실패. 채널 정보를 찾을 수 없음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelInfo.CHANNEL_INFO_FAIL_INVALID_SERVICE_ID">
            <summary>
            실패. 잘못된 서비스 아이디
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelInfo.CHANNEL_INFO_FAIL_INVALID_CHANNEL_ID">
            <summary>
            실패. 잘못된 채널 아이디
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelInfo.CHANNEL_INFO_FAIL_CHANNEL_NOT_FOUND">
            <summary>
            실패. 채널을 찾을 수 없음
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeAllChannelInfo">
            <summary>
            GetAllChannelInfo() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeAllChannelInfo.ALL_CHANNEL_INFO_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeAllChannelInfo.ALL_CHANNEL_INFO_FAIL_NO_CHANNEL_INFO">
            <summary>
            실패. 채널 정보를 찾을 수 없음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeAllChannelInfo.ALL_CHANNEL_INFO_FAIL_INVALID_SERVICE_ID">
            <summary>
            실패. 잘못된 서비스 아이디
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeAllChannelInfo.ALL_CHANNEL_INFO_FAIL_CHANNEL_NOT_FOUND">
            <summary>
            실패. 채널을 찾을 수 없음
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeChannelCountInfo">
            <summary>
            GetChannelCountInfo() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelCountInfo.CHANNEL_COUNT_INFO_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelCountInfo.CHANNEL_COUNT_INFO_FAIL_NO_CHANNEL_INFO">
            <summary>
            실패. 채널 정보를 찾을 수 없음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelCountInfo.CHANNEL_COUNT_INFO_FAIL_INVALID_SERVICE_ID">
            <summary>
            실패. 잘못된 서비스 아이디
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelCountInfo.CHANNEL_COUNT_INFO_FAIL_INVALID_CHANNEL_ID">
            <summary>
            실패. 잘못된 채널 아이디
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelCountInfo.CHANNEL_COUNT_INFO_FAIL_CHANNEL_NOT_FOUND">
            <summary>
            실패. 채널을 찾을 수 없음
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeAllChannelCountInfo">
            <summary>
            GetAllChannelCountInfo() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeAllChannelCountInfo.ALL_CHANNEL_COUNT_INFO_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeAllChannelCountInfo.ALL_CHANNEL_COUNT_INFO_FAIL_NO_CHANNEL_INFO">
            <summary>
            실패. 채널 정보를 찾을 수 없음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeAllChannelCountInfo.ALL_CHANNEL_COUNT_INFO_FAIL_INVALID_SERVICE_ID">
            <summary>
            실패. 채널 정보를 찾을 수 없음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeAllChannelCountInfo.ALL_CHANNEL_COUNT_INFO_FAIL_CHANNEL_NOT_FOUND">
            <summary>
            실패. 채널을 찾을 수 없음
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeChannelList">
            <summary>
            GetChannelList() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelList.CHANNEL_LIST_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeChannelList.CHANNEL_LIST_FAIL_NO_CHANNEL_LIST">
            /// <summary>
            실패. 채널 목록을 찾을 수 없음
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeJoinRoom">
            <summary>
            JoinRoom() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeJoinRoom.JOIN_ROOM_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeJoinRoom.JOIN_ROOM_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeJoinRoom.JOIN_ROOM_FAIL_ROOM_DOES_NOT_EXIST">
            <summary>
            실패. 방이 존재하지 않음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeJoinRoom.JOIN_ROOM_FAIL_ALREADY_JOINED_ROOM">
            <summary>
            실패. 이미 방에 들어가 있음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeJoinRoom.JOIN_ROOM_FAIL_ALREADY_FULL">
            <summary>
            실패. 이미 방의 인원수가 차있을 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeJoinRoom.JOIN_ROOM_FAIL_ROOM_MATCH">
            <summary>
            실패. 룸매치 메이킹에서 문제가 발생할 경우
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeLeaveRoom">
            <summary>
            LeaveRoom() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLeaveRoom.LEAVE_ROOM_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLeaveRoom.LEAVE_ROOM_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeLogin">
            <summary>
            Login() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_FAIL_NOT_EXIST_NODE">
            <summary>
            실패. 노드가 존재하지 않음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_FAIL_TIMEOUT_GAME_SERVER">
            <summary>
            실패. 게임서버가 응답하지 않음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_FAIL_INVALID_SERVICEID">
            <summary>
            실패. 잘못된 서비스 아이디
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_FAIL_INVALID_USERTYPE">
            <summary>
            실패. 잘못된 유저 타입
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_FAIL_INVALID_USERID">
            <summary>
            실패. 잘못된 유저 아이디
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_FAIL_INVALID_SUB_ID">
            <summary>
            실패. 잘못된 서브아이디
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_FAIL_LOGINED_OTHER_SERVICE">
            <summary>
            실패. 다른 서비스에 로그인 되어있음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_FAIL_LOGINED_OTHER_CHANNEL">
            <summary>
            실패. 다른 채널에 로그인 되어있음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_FAIL_LOGINED_OTHER_USER_TYPE">
            <summary>
            실패. 동일 계정 아이디로 다른 유저타입이 로그인 되어있음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogin.LOGIN_FAIL_LOGINED_OTHER_DEVICE">
            <summary>
            실패. 동일 계정 아이디로 다른 기기 식별용 고유 아이디가 로그인 되어있음
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeLogout">
            <summary>
            Logout() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogout.LOGOUT_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeLogout.LOGOUT_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeMatchUserCancel">
            <summary>
            MatchUserCancel() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserCancel.MATCH_USER_CANCEL_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserCancel.MATCH_USER_CANCEL_FAIL">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserCancel.MATCH_USER_CANCEL_FAIL_ALREADY_JOINED_ROOM">
            <summary>
            실패. 이미 매칭이 이루어짐
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserCancel.MATCH_USER_CANCEL_FAIL_NOT_IN_PROGRESS">
            <summary>
            실패, 매칭이 진행중이지 않은 경우
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeMatchPartyStart">
            <summary>
            MatchPartyStart() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchPartyStart.MATCH_PARTY_START_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchPartyStart.MATCH_PARTY_START_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchPartyStart.MATCH_PARTY_START_FAIL_PARTY_MATCH_WEIRD">
            <summary>
            실패. 파티매칭을 요청할 때, 방이 파티매칭용 방이 아닌경우
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeMatchRoom">
            <summary>
            MatchRoom() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_ROOM_DOES_NOT_EXIST">
            <summary>
            실패. 방이 존재하지 않음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_ALREADY_JOINED_ROOM">
            <summary>
            실패. 이미 방에 들어가 있음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_LEAVE_ROOM">
            <summary>
            실패. 방 이동 기능으로 매칭시킬 때, 기존방에서 나가기가 실패한 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_IN_PROGRESS">
            <summary>
            실패. 이미 매치 매이킹이 진행중인 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_MATCHED_ROOM_DOES_NOT_EXIST">
            <summary>
            실패. 조건에 맞는 방을 찾아 방에 참가 시키는 도중, 방이 사라짐
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_CREATE_FAILED_ROOM_ID">
            <summary>
            실패. RoomId 생성이 실패하였을 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_CREATE_FAILED_ROOM">
            <summary>
            실패. 방 생성이 실패하였을 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_INVALID_ROOM_ID">
            <summary>
            실패. 잘못된 룸아이디가 사용되었을 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_INVALID_NODE_ID">
            <summary>
            실패. 잘못된 노드아이디가 사용되었을 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_INVALID_USER_ID">
            <summary>
            실패. 잘못된 유저아이디가 사용되었을 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_MATCHED_ROOM_NOT_FOUND">
            <summary>
            실패. 매칭을 진행하였으나, 방을 찾지 못함
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_INVALID_MATCHING_USER_CATEGORY">
            <summary>
            실패. 잘못된 매칭 유저 카테고리를 사용하였을 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_MATCHING_USER_CATEGORY_EMPTY">
            <summary>
            실패. 매칭룸에서 유저 카테고리 사이즈가 0일 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_BASE_ROOM_MATCH_FORM_NULL">
            <summary>
            실패. 매칭 신청서가 널 일 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchRoom.MATCH_ROOM_FAIL_BASE_ROOM_MATCH_INFO_NULL">
            <summary>
            실패. 매칭 정보가 널 일 경우
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeMatchPartyCancel">
            <summary>
            MatchPartyCancel() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchPartyCancel.MATCH_PARTY_CANCEL_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchPartyCancel.MATCH_PARTY_CANCEL_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchPartyCancel.MATCH_PARTY_CANCEL_FAIL_PARTY_MATCH_WEIRD">
            <summary>
            실패. 파티매칭을 취소할 때, 방이 파티매칭용 방이 아닌경우
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeMatchUserDone">
            <summary>
            MatchUserDone() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserDone.MATCH_USER_DONE_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserDone.MATCH_USER_DONE_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨(조건에 맞는 방을 찾지 못함)
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserDone.MATCH_USER_DONE_FAIL_ROOM_DOES_NOT_EXIST">
            <summary>
            실패. 조건에 맞는 방을 찾아 방에 참가 시키는 도중, 방이 사라짐
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserDone.MATCH_USER_DONE_FAIL_TRANSFER">
            <summary>
            실패. 조건에 맞는 방을 찾아 방에 참가 시키는 도중, 방에 참가하기 위해 transfer 하는 과정에서 실패함
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserDone.MATCH_USER_DONE_FAIL_CREATE_ROOM">
            <summary>
            실패. 방 생성 실패
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeMatchUserStart">
            <summary>
            MatchUserStart() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserStart.MATCH_USER_START_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserStart.MATCH_USER_START_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMatchUserStart.MATCH_USER_START_FAIL_ALREADY_JOINED_ROOM">
            <summary>
            실패. 이미 방에 들어가 있음
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeMoveChannel">
            <summary>
            MoveChannel() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMoveChannel.MOVE_CHANNEL_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMoveChannel.MOVE_CHANNEL_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMoveChannel.MOVE_CHANNEL_FAIL_NODE_NOT_FOUND">
            <summary>
            실패. 채널 노드를 찾을 수 없음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMoveChannel.MOVE_CHANNEL_FAIL_ALREADY_JOINED_CHANNEL">
            <summary>
            실패. 이미 요청한 채널에 있음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeMoveChannel.MOVE_CHANNEL_FAIL_ALREADY_JOINED_ROOM">
            <summary>
            실패. 이미 방에 입장하여 채널 이동을 할 수 없음
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeNamedRoom">
            <summary>
            NamedRoom() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeNamedRoom.NAMED_ROOM_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeNamedRoom.NAMED_ROOM_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeNamedRoom.NAMED_ROOM_FAIL_ROOM_DOES_NOT_EXIST">
            <summary>
            실패. 방 생성이 실패하여 방을 찾을 수 없음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeNamedRoom.NAMED_ROOM_FAIL_ALREADY_JOINED_ROOM">
            <summary>
            실패. 이미 방에 들어가 있음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeNamedRoom.NAMED_ROOM_FAIL_INVALID_ROOM_NAME">
            <summary>
            실패. 잘못된 방 이름을 보냈을 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeNamedRoom.NAMED_ROOM_FAIL_CREATE_ROOM">
            <summary>
            실패. 방 생성 실패
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeSnapshot">
            <summary>
            Snapshot() 결과 코드
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeSnapshot.SNAPSHOT_SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeSnapshot.SNAPSHOT_FAIL_CONTENT">
            <summary>
            실패. 컨텐츠에서 거부됨
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeDisconnect">
            <summary>
            연결 해제가 된 이유
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_SYSTEM_ERROR">
            <summary>
            시스템 오류로 인한 강제 종료<para></para>
            일반적으로 클라이언트에서 이 코드를 받을 일은 거의 없으며, 이 코드를 받았다면 GameAnvil 개발팀에 문의 필요
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_BASE_CONNECTION">
            <summary>
            서버에서 BaseConnection의 close() 호출
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_BASE_USER">
            <summary>
            서버에서 BaseUser의 closeConnection() 호출
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_ADMIN_KICK">
            <summary>
            어드민에서 강제 종료
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_INVALID_NODE">
            <summary>
            GameNode가 INVALID 상태로 변경된 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_USER_TRANSFER_FAIL">
            <summary>
            유저 트렌스퍼가 실패한 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_USER_TRANSFER_ERROR">
            <summary>
            유저 트렌스퍼중 시스템 에러가 발생한 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_AUTHENTICATION_FAIL">
            <summary>
            인증 실패로 인한 강제 종료
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_AUTHENTICATION_FAIL_EMPTY_ACCOUNT_ID">
            <summary>
            인증 실패로 인한 강제 종료 - 계정 아이디가 없을 경우
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_DUPLICATE_LOGIN">
            <summary>
            중복접속으로 인한 강제 종료
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_BY_NEW_CONNECTION">
            <summary>
            같은 계정 정보로 새로운 로그인 요청이 들어온 경우<para></para>
            네트워크 순단 등으로 재접속을 하면 이전의 접속을 종료하면서 이 코드를 사용<para></para>
            일반적으로 클라이언트에서 이 코드를 받을 일은 거의 없으며, 이 코드를 받았다면 GameAnvil 개발팀에 문의 필요
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_DISCONNECT_ALARM_FROM_CLIENT">
            <summary>
            클라이언트와의 연결 끊김을 감지할 경우<para></para>
            일반적으로 클라이언트에서 이 코드를 받을 일은 거의 없으며, 이 코드를 받았다면 GameAnvil 개발팀에 문의 필요
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_DISCONNECT_ALARM_NOT_FIND_SESSION">
            <summary>
            세션을 찾을 수 없는 경우<para></para>
            일반적으로 클라이언트에서 이 코드를 받을 일은 거의 없으며, 이 코드를 받았다면 GameAnvil 개발팀에 문의 필요
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_CHECK_CLIENT_STATE_FAIL">
            <summary>
            클라이언트가 서버의 상태 체크에 응답을 하지 않은 경우<para></para>
            일반적으로 클라이언트에서 이 코드를 받을 일은 거의 없으며, 이 코드를 받았다면 GameAnvil 개발팀에 문의 필요
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.FORCE_CLOSE_GHOST_USER">
            <summary>
            고스트 유저인 경우<para></para>
            일반적으로 클라이언트에서 이 코드를 받을 일은 거의 없으며, 이 코드를 받았다면 GameAnvil 개발팀에 문의 필요
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.SOCKET_DISCONNECT">
            <summary>
            네트워크 연결이 끊어짐
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.SOCKET_TIME_OUT">
            <summary>
            타임아웃이 발생, 컨넥터에서 연결을 끊음
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeDisconnect.SOCKET_ERROR">
            <summary>
            소켓 에러가 발생하여 연결을 끊음
            </summary>
        </member>
        <member name="T:GameAnvil.Defines.ResultCodeSessionClose">
            <summary>
            세션이이 닫히게 된 이유
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeSessionClose.SESSION_CLOSE_BASE_USER">
            <summary>
            서버에서 BaseUser의 closeSession() 호출
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeSessionClose.SESSION_CLOSE_ADMIN_KICK">
            <summary>
            어드민에서 강제 종료
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeSessionClose.SESSION_CLOSE_DUPLICATE_LOGIN">
            <summary>
            중복접속으로 인한 강제 종료
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeSessionClose.SESSION_CLOSE_BY_NEW_CONNECTION">
            <summary>
            같은 계정 정보로 새로운 로그인 요청이 들어온 경우<para></para>
            네트워크 순단 등으로 재접속을 하면 이전의 접속을 종료하면서 이 코드를 사용<para></para>
            일반적으로 클라이언트에서 이 코드를 받을 일은 거의 없으며, 이 코드를 받았다면 GameAnvil 개발팀에 문의 필요
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeSessionClose.SESSION_CLOSE_DISCONNECT_ALARM_FROM_CLIENT">
            <summary>
            클라이언트와의 연결 끊김을 감지할 경우<para></para>
            일반적으로 클라이언트에서 이 코드를 받을 일은 거의 없으며, 이 코드를 받았다면 GameAnvil 개발팀에 문의 필요
            </summary>
        </member>
        <member name="F:GameAnvil.Defines.ResultCodeSessionClose.SESSION_CLOSE_DISCONNECT_ALARM_NOT_FIND_SESSION">
            <summary>
            세션을 찾을 수 없는 경우<para></para>
            일반적으로 클라이언트에서 이 코드를 받을 일은 거의 없으며, 이 코드를 받았다면 GameAnvil 개발팀에 문의 필요
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.InvalidServiceName">
            <summary>
            서버에 등록되지 않은 서비스이름을 사용하는 경우 발생
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.InvalidServeiceId">
            <summary>
            알 수 없는 서비스아이디를 전달받은 경우 발생
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.InvalidSubId">
            <summary>
            0 값이나 알수 없는 서브아이디를 전달받은 경우 발생
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.InvalidProtocol">
            <summary>
            등록하지 않은 프로토콜을 사용하는 경우 발생
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.InvalidProtocolId">
            <summary>
            프로토콜 아이디가 사용가능한 범위 밖일 경우 발생
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.NotConnected">
            <summary>
            서버와 연결을 하지 않고 연결이 필요한 API를 호출했을 경우 발생
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.NotAuthenticated">
            <summary>
            서버에 인증 처리 하지 않고 인증이 필요한 API를 호출했을 경우 발생
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.NotLoggedIn">
            <summary>
            서버에 로그인 하지 않고 로그인이 필요한 API를 호출했을 경우 발생
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.MatchUserInProgress">
            <summary>
            유저 매칭이 진행중일 때 유저 매칭을 취소하는 MatchUserCancel() 이외의 API를 호출했을 경우 발생
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.MatchPartyInProgress">
            <summary>
            파티 매칭이 진행중일 때 파티매칭을 취소하는 MatchPartyCancel() 이외의 API를 호출했을 경우 발생
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.MatchUserNotInProgress">
            <summary>
            유저 매칭이 진행중이 아닐 때 유저 매칭 취소하는 MatchUserCancel() API를 호출했을 경우 발생
            </summary>
        </member>
        <member name="T:GameAnvil.Exceptions.MatchPartyNotInProgress">
            <summary>
            파티 매칭이 진행중이 아닐 때 파티매칭을 취소하는 MatchPartyCancel() API를 호출했을 경우 발생
            </summary>
        </member>
        <member name="M:GameAnvil.Internal.AgentManager.CreateUserAgent(System.String,System.Int32)">
            <summary>
            유저 에이전트 생성.
            </summary>
            <param name="serviceName">UserAgent가 사용할 serviceName. </param>
            <param name="subId">서비스별 UserAgent식별 할 수 있는 고유 ID.</param>
            <returns>생성된 유저 에이전트.</returns>
        </member>
        <member name="M:GameAnvil.Internal.AgentManager.GetUserAgent(System.Int32,System.Int32)">
            <summary>
            유저 에이전트를 찾아 가져온다.
            </summary>
            <param name="serviceId">UserAgent가 사용할 serviceId. </param>
            <param name="subId">서비스별 UserAgent식별 할 수 있는 고유 ID.</param>
            <returns>해당 유저 에이전트, 없으면 null</returns>
        </member>
        <member name="M:GameAnvil.Internal.AgentManager.FindAgent(GameAnvil.Network.InternalPacket)">
            <summary>
            패킷으로 부터 Agent를 찾아준다.
            서비스 이동 시 변경된 유저 에이전트를 찾아준다.
            null 인경우 ConnectionAgent를 넘겨준다.
            </summary>
            <param name="internalPacket">패킷</param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.Internal.AgentManager.FindUserAgent(GameAnvil.Network.InternalPacket)">
            <summary>
            패킷으로 부터 Agent를 찾아준다.
            서비스 이동 시 변경된 유저 에이전트를 찾아준다.
            UserAgent에 해당 Agent가 없는경우 null 리턴.
            </summary>
            <param name="internalPacket">패킷</param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.Internal.AgentManager.GetConnectionAgent">
            <summary>
            ConnectionAgent 에이전트를 넘겨준다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.Internal.AgentManager.GetUserAgents">
            <summary>
            모든 유저 에이전트를 넘겨준다.
            </summary>
            <returns>모든 유저 에이전트.</returns>
        </member>
        <member name="F:GameAnvil.Internal.Core.config">
            <summary>
            커넥터 환경값.
            </summary>
        </member>
        <member name="M:GameAnvil.Internal.Core.LvNetLogger(GameAnvil.Defines.NetLogLevel,System.String)">
            <summary>
            로그 콜백.
            </summary>
        </member>
        <member name="M:GameAnvil.Internal.Core.Logger(GameAnvil.Defines.LogLevel,System.String)">
            <summary>
            로그 콜백.
            </summary>
        </member>
        <member name="T:GameAnvil.IMessageHelper">
            <summary>
            
            </summary>
        </member>
        <member name="F:GameAnvil.Network.PacketManager.packet_seq">
            <summary>
             패킷 고유 id, 양수로 이루어져야 한다.
            </summary>
        </member>
        <member name="M:GameAnvil.Network.PacketManager.Validate(GameAnvil.Packet)">
            <summary>
            유효성 검사.
            </summary>
            <param name="packet"></param>
            <returns></returns>
        </member>
        <member name="T:GameAnvil.Socket.TcpSocket">
            <summary>
            커넥터에서 사용하는 TcpSocket<para></para>
            TCP 연결이 필요할 경우 사용<para></para>
            기본으로 사용하는 소켓
            </summary>
        </member>
        <member name="M:GameAnvil.Socket.TcpSocket.#ctor(GameAnvil.Connector)">
            <summary>
            커넥터를 가지고 TCP 연결을 만드는생성자
            </summary>
            <param name="connector">TCP 연결에 사용할 커넥터</param>
        </member>
        <member name="M:GameAnvil.Socket.TcpSocket.Connect(System.String,System.Int32)">
            <summary>
            전달받은 아이피와 포트로 TCP 연결
            </summary>
            <param name="ip">접속할 아이피 주소</param>
            <param name="port">접속할 포트</param>
        </member>
        <member name="M:GameAnvil.Socket.TcpSocket.IsConnected">
            <summary>
            TCP 연결이 되어 있는지 확인
            </summary>
            <returns>접속되었으면 true, 아니면 false</returns>
        </member>
        <member name="M:GameAnvil.Socket.TcpSocket.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            TCP로 접속한 서버로 데이터를 전송
            </summary>
            <param name="data">전송할 데이터</param>
            <param name="offset">데이터의 시작위치</param>
            <param name="length">데이터의 길이</param>
        </member>
        <member name="M:GameAnvil.Socket.TcpSocket.Close">
            <summary>
            TCP 연결 종료
            </summary>
        </member>
        <member name="T:GameAnvil.Socket.ISocket">
            <summary>
            커넥터에서 사용하는 소켓 인터페이스
            </summary>
        </member>
        <member name="M:GameAnvil.Socket.ISocket.Connect(System.String,System.Int32)">
            <summary>
            전달받은 아이피와 포트로 연결
            </summary>
            <param name="ip">접속할 아이피 주소</param>
            <param name="port">접속할 포트</param>
        </member>
        <member name="M:GameAnvil.Socket.ISocket.IsConnected">
            <summary>
            연결이 되어 있는지 확인
            </summary>
            <returns>현재 연결 여부를 반환</returns>
        </member>
        <member name="M:GameAnvil.Socket.ISocket.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            접속한 서버로 데이터를 전송
            </summary>
            <param name="data">전송할 데이터</param>
            <param name="offset">데이터의 시작위치</param>
            <param name="length">데이터의 길이</param>
        </member>
        <member name="M:GameAnvil.Socket.ISocket.Close">
            <summary>
            연결 종료
            </summary>
        </member>
        <member name="T:GameAnvil.Socket.Socket">
            <summary>
            커넥터 내부적으로 사용하는 클래스. 사용하면 안된다.
            </summary>
        </member>
        <member name="T:GameAnvil.Socket.TcpSecureSocket">
            <summary>
            커넥터에서 사용하는 TcpSecureSocket 클래스<para></para>
            TCP SSL 연결이 필요할 경우 사용
            </summary>
        </member>
        <member name="M:GameAnvil.Socket.TcpSecureSocket.#ctor(GameAnvil.Connector)">
            <summary>
            커넥터를 가지고 SSL 연결을 만드는생성자
            </summary>
            <param name="connector">SSL 연결에 사용할 커넥터</param>
        </member>
        <member name="M:GameAnvil.Socket.TcpSecureSocket.Connect(System.String,System.Int32)">
            <summary>
            전달받은 아이피와 포트로 SSL 연결
            </summary>
            <param name="ip">접속할 아이피 주소</param>
            <param name="port">접속할 포트</param>
        </member>
        <member name="M:GameAnvil.Socket.TcpSecureSocket.IsConnected">
            <summary>
            SSL 연결이 되어 있는지 확인
            </summary>
            <returns>접속되었으면 true, 아니면 false</returns>
        </member>
        <member name="M:GameAnvil.Socket.TcpSecureSocket.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            SSL로 접속한 서버로 데이터를 전송
            </summary>
            <param name="data">전송할 데이터</param>
            <param name="offset">데이터의 시작위치</param>
            <param name="length">데이터의 길이</param>
        </member>
        <member name="M:GameAnvil.Socket.TcpSecureSocket.Close">
            <summary>
            SSL 연결 종료
            </summary>
        </member>
        <member name="T:GameAnvil.PacketHelper">
            <summary>
            패킷의 확장 클래스
            </summary>
        </member>
        <member name="M:GameAnvil.PacketHelper.GetMessage``1(GameAnvil.Packet)">
            <summary>
            패킷으로부터 메세지를 반환
            </summary>
            <typeparam name="T">프로토콜 버퍼의 IMessage 를 상속한 타입</typeparam>
            <param name="packet">패킷</param>
            <returns>IMessage를 상속받은 타입 메세지</returns>
        </member>
        <member name="M:GameAnvil.PacketHelper.GetMessage(GameAnvil.Packet,System.Type)">
            <summary>
            패킷으로부터 메세지를 반환
            </summary>
            <param name="packet">패킷</param>
            <param name="type">메세지의 타입</param>
            <returns>IMessage 메세지</returns>
        </member>
        <member name="M:GameAnvil.PacketHelper.GetMessageName(GameAnvil.Packet)">
            <summary>
            패킷에 담긴 메세지의 이름을 반환
            </summary>
            <param name="packet">패킷</param>
            <returns>메세지의 이름</returns>
        </member>
        <member name="T:GameAnvil.ProtocolManager">
            <summary>
            커넥터에서 사용할 프로토콜을 관리<para></para>
            프로토버프를 지원하며 서버와 주고받는 모든 프로토콜은 미리 등록
            </summary>
        </member>
        <member name="M:GameAnvil.ProtocolManager.GetInstance">
            <summary>
            프로토콜매니저 싱글턴 인스턴스를 반환
            </summary>
            <returns>프로토콜매니저의 싱글턴 인스턴스</returns>
        </member>
        <member name="M:GameAnvil.ProtocolManager.RegisterProtocol(System.UInt16,Google.Protobuf.Reflection.FileDescriptor)">
            <summary>
            사용할 프로토콜을 등록
            </summary>
            <param name="protocolId">등록할 프로토콜의 아이디. 서버와 같은 값을 사용( protocolId >= 0 &amp;&amp; protocolId &lt;= 510 )</param>
            <param name="descriptor">등록할 프로토콜</param>
        </member>
        <member name="M:GameAnvil.ProtocolManager.UnregisterProtocol(System.UInt16)">
            <summary>
            등록한 프로토콜을 등록 해제
            </summary>
            <param name="protocolId">등록 해제할 프로토콜의 아이디</param>
        </member>
        <member name="M:GameAnvil.ProtocolManager.GetProtocolId(Google.Protobuf.Reflection.MessageDescriptor)">
            <summary>
            메세지의 프로토콜 아이디를 반환
            </summary>
            <param name="descriptor">확인하고자 하는 메세지의 메세지디스크립터</param>
            <returns>메세지디스크립터의 프로토콜 아이디</returns>
        </member>
        <member name="T:GameAnvil.PayloadHelper">
            <summary>
            페이로드의 확장 클래스
            </summary>
        </member>
        <member name="M:GameAnvil.PayloadHelper.GetMessage``1(GameAnvil.Payload)">
            <summary>
            페이로드에 담긴 패킷으로부터 메세지를 반환
            </summary>
            <typeparam name="T">프로토콜 버퍼의 IMessage 를 상속받은 타입</typeparam>
            <param name="payload">정보가 담긴 페이로드</param>
            <returns>IMessage를 상속받은 메세지</returns>
        </member>
        <member name="T:GameAnvil.Connector">
            <summary>
            커넥터는 GameAnvil 커넥터를 사용하기 위한 기본 클래스<para></para>
            기본 설정과 에이전트의 관리를 담당<para></para>
            또 내부 동작과 관련된 로그를 볼수 있도록 대리자를 등록할 수 있음
            </summary>
        </member>
        <member name="T:GameAnvil.Connector.Config">
            <summary>
            커넥터 환경 클래스
            </summary>
        </member>
        <member name="F:GameAnvil.Connector.Config.defaultReqestTimeout">
            <summary>
            타임아웃 기본 대기시간 설정(단위 : 초, 기본값 3)
            </summary>
        </member>
        <member name="F:GameAnvil.Connector.Config.packetTimeout">
            <summary>
            패킷이 지정된 시간안에 업데이트 되지 않으면 연결이 끊겼다고 판단<para></para>
            pingInterval 값보다 보다 높게 설정 필요
            </summary>
        </member>
        <member name="F:GameAnvil.Connector.Config.pingInterval">
            <summary>
            서버와의 연결을 확인하기 위한 확인 주기 설정(단위 : 초, 0일 경우 사용 안함, 기본값 3)
            </summary>
        </member>
        <member name="F:GameAnvil.Connector.Config.useIPv6">
            <summary>
            접속시 IPv6 주소로 변환 여부(기본값 : false)
            </summary>
        </member>
        <member name="F:GameAnvil.Connector.Config.useSocketNoDelay">
            <summary>
            소켓의 Nodelay 사용 여부 (기본값 : true)
            </summary>
        </member>
        <member name="F:GameAnvil.Connector.Config.useArgumentDelegateOnly">
            <summary>
            함수 호출시 대리자로 인자로 넣어 호출할 경우 인자로 받은 대리자만 호출 (기본값 : true)
            </summary>
        </member>
        <member name="P:GameAnvil.Connector.config">
            <summary>
            커넥터 환경값
            </summary>
        </member>
        <member name="F:GameAnvil.Connector.LvNetLogger">
            <summary>
            네트워크 로그 콜백
            </summary>
        </member>
        <member name="F:GameAnvil.Connector.Logger">
            <summary>
            로그 콜백
            </summary>
        </member>
        <member name="P:GameAnvil.Connector.Socket">
            <summary>
            UnityWebGL을 위한 임시 공개<para></para>
            임의로 사용하면 안된다
            </summary>
        </member>
        <member name="M:GameAnvil.Connector.#ctor">
            <summary>
            커넥터 생성
            </summary>
        </member>
        <member name="M:GameAnvil.Connector.#ctor(GameAnvil.Connector.Config)">
            <summary>
            커넥터 생성
            </summary>
            <param name="config">커넥터 환경</param>
        </member>
        <member name="M:GameAnvil.Connector.CreateUserAgent(System.String,System.Int32)">
            <summary>
            유저 에이전트 생성
            </summary>
            <param name="serviceName">유저 에이전트가 사용할 서비스이름 </param>
            <param name="subId">서비스별 유저에이전트를 식별 할 수 있는 고유 아이디</param>
            <returns>생성된 유저 에이전트</returns>
        </member>
        <member name="M:GameAnvil.Connector.GetUserAgent(System.String,System.Int32)">
            <summary>
            유저 에이전트를 찾아 반환
            </summary>
            <param name="serviceName">유저에이전트가 사용할 서비스 이름</param>
            <param name="subId">서비스별 유저에이전트를 식별 할 수 있는 고유 아이디</param>
            <returns>해당 유저 에이전트, 없으면 널</returns>
        </member>
        <member name="M:GameAnvil.Connector.GetUserAgents">
            <summary>
            모든 유저 에이전트를 반환
            </summary>
            <returns>모든 유저 에이전트</returns>
        </member>
        <member name="M:GameAnvil.Connector.GetConnectionAgent">
            <summary>
            커넥션에이전트를 반환
            </summary>
            <returns>커넥션에이전트</returns>
        </member>
        <member name="M:GameAnvil.Connector.CloseSocket">
            <summary>
            소켓 종료
            </summary>
        </member>
        <member name="M:GameAnvil.Connector.Update">
            <summary>
            메세지의 처리를 위한 함수<para></para>
            주기적으로 호출해주어야 한다
            </summary>
        </member>
        <member name="M:GameAnvil.Connector.IsConnected">
            <summary>
            접속 여부를 확인
            </summary>
            <returns>접속되었으면 true, 아니면 false</returns>
        </member>
        <member name="M:GameAnvil.Connector.IsAuthenticate">
            <summary>
            인증되었는지 확인
            </summary>
            <returns>인증되었으면 true, 아니면 false</returns>
        </member>
        <member name="M:GameAnvil.Connector.IsLoggedIn(System.String,System.Int32)">
            <summary>
            서비스 이름과 서브아이를 가지고 로그인 되었는지 확인
            </summary>
            <param name="serviceName">확인할 서비스 이름</param>
            <param name="subId">확인할 서브아이디</param>
            <returns>해당 서비스에 서브아이디로 로그인되어있으면 true, 아니면 false</returns>
        </member>
        <member name="T:GameAnvil.Payload">
            <summary>
            여러개의 패킷을 담기 위한 추가정보 클래스
            </summary>
        </member>
        <member name="M:GameAnvil.Payload.Add(GameAnvil.Packet)">
            <summary>
            패킷을을 추가
            </summary>
            <param name="packet"> 추가할 패킷 </param>
            <returns>패킷이 추가 된 상태의 정보</returns>
        </member>
        <member name="M:GameAnvil.Payload.AddAll(System.Collections.Generic.ICollection{GameAnvil.Packet})">
            <summary>
            콜랙션 형태의 패킷들을 추가
            </summary>
            <param name="packets"> 추가할 패킷의 콜랙션 </param>
            <returns>패킷이 추가 된 상태의 정보</returns>
        </member>
        <member name="M:GameAnvil.Payload.GetPacket``1">
            <summary>
            저장한 패킷을 반환, 없을 경우 널을 반환
            </summary>
            <typeparam name="T"> 프로토콜 버퍼의 IMessage 를 상속받은 타입</typeparam>
            <returns>T가 담긴 패킷, 없을 경우 널</returns>
        </member>
        <member name="M:GameAnvil.Payload.GetPacket(System.Int32)">
            <summary>
            사용자 정의 메세지 아이디로 byte[] 를 담은 패킷을 반환, 없을 경우 널을 반환
            </summary>
            <param name="customMsgId">사용자 메세지 아이디</param>
            <returns>사용자 정의 메세지 아이디와 byte[]를 담은 패킷. 없을 경우 널</returns>
        </member>
        <member name="M:GameAnvil.Payload.Values">
            <summary>
            클래스에 저장된 모든 패킷을 ICollection에 담아 반환
            </summary>
            <returns>모든 패킷을 저장한 ICollection</returns>
        </member>
        <member name="M:GameAnvil.Payload.Contains``1">
            <summary>
            저장한 패킷이 있는지 확인
            </summary>
            <typeparam name="T"> 프로토콜 버퍼의 IMessage 를 상속받은 타입</typeparam>
            <returns>있으면 true, 없으면 false</returns>
        </member>
        <member name="M:GameAnvil.Payload.Contains(System.Int32)">
            <summary>
            사용자 정의 메세지 아이디가 패킷에 있는지 확인
            </summary>
            <param name="customMsgId"> 사용자 정의 메세지 아이디 </param>
            <returns>있으면 true, 없으면 false</returns>
        </member>
        <member name="T:GameAnvil.Packet">
            <summary>
            서버와 주고 받는 모든 메세지는 패킷에 실려서 처리 되며 패킷이 제공하는 인터페이스를 이용
            </summary>
        </member>
        <member name="M:GameAnvil.Packet.CompareTo(GameAnvil.Packet)">
            <summary>
            패킷간의 우선순위를 비교
            </summary>
            <param name="other">비교할 다른 패킷 </param>
            <returns>우선 순위가 낮으면 -1, 같으면 0, 크면 1</returns>
        </member>
        <member name="M:GameAnvil.Packet.CreateWithCustomMsg(System.Int32,System.Byte[])">
            <summary>
            사용자 정의 메세지 아이디와 byte[]을 이용해 패킷을 생성
            </summary>
            <param name="customMsgId">패킷을 구분하기위한 메세지 아이디</param>
            <param name="buffer">패킷에 담을 byte[]</param>
        </member>
        <member name="M:GameAnvil.Packet.#ctor(Google.Protobuf.IMessage)">
            <summary>
            프로토콜 버퍼의 메세지를 이용해 패킷을 생성
            </summary>
            <param name="message">프로토콜 버퍼의 메세지</param>
        </member>
        <member name="M:GameAnvil.Packet.Compress">
            <summary>
            패킷을 압축<para></para>
            압축한 사이즈가 작을때만 압축 처리
            </summary>
            <returns>압축 처리한 패킷</returns>
        </member>
        <member name="M:GameAnvil.Packet.Decompress">
            <summary>
            패킷을 압축 해제<para></para>
            압축되어 있는 상태만 압축해제를 처리
            </summary>
            <returns>압축 해제 처리한 패킷</returns>
        </member>
        <member name="M:GameAnvil.Packet.IsCompress">
            <summary>
            패킷을 압축 여부를 반환
            </summary>
            <returns>압축되어있다면 true, 아니면 false</returns>
        </member>
        <member name="M:GameAnvil.Packet.GetBytes">
            <summary>
            패킷에 담긴 byte[]를 반환
            </summary>
            <returns>패킷 byte[]</returns>
        </member>
        <member name="M:GameAnvil.Packet.GetUnCompressSize">
            <summary>
            패킷의 압축 해제시의 크기
            </summary>
            <returns>패킷의 압축 해제시의 크기. 압축되지 않았을 경우 0</returns>
        </member>
        <member name="M:GameAnvil.Packet.GetPriority">
            <summary>
            패킷의 우선순위를 반환
            </summary>
            <returns>패킷의 우선순위</returns>
        </member>
        <member name="M:GameAnvil.Packet.SetPriority(System.Int32)">
            <summary>
            패킷의 우선순위를 설정
            </summary>
            <param name="priority">패킷의 우선순위</param>
        </member>
        <member name="T:Com.Nhn.Gameanvilcore.Protocol.ErrorReflection">
            <summary>Holder for reflection information generated from error.proto</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.ErrorReflection.Descriptor">
            <summary>File descriptor for error.proto</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.Success">
            <summary>
            Common : 0 ~ 1
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.AuthSuccess">
            <summary>
            Server &lt;-> Connector : 2 ~ 10000
            Authentication
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LoginSuccess">
            <summary>
            Login
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LoginFailNotExistNode">
            <summary>
            서비스 중인 노드가 없을 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LoginFailTimeoutGameServer">
            <summary>
            GameServer가 응답하지 않을 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LoginFailInvalidServiceid">
            <summary>
            잘못된 ServiceId가 사용될 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LoginFailInvalidUsertype">
            <summary>
            잘못된 UserType이 사용될 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LoginFailInvalidUserId">
            <summary>
            잘못된 UserId를 보냈을 경우
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LoginFailInvalidSubId">
            <summary>
            잘못된 SubId를 보냈을 경우
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LoginFailLoginedOtherService">
            <summary>
            동일 Account 아이디로 다른 서비스에 로그인 되어있음.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LoginFailLoginedOtherChannel">
            <summary>
            동일 Account 아이디로 다른 채널에 로그인 되어있음.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LoginFailLoginedOtherUserType">
            <summary>
            동일 Account 아이디로 다른 UserType이 로그인 되어있음.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LoginFailLoginedOtherDevice">
            <summary>
            동일 Account 아이디로 다른 DeviceId가 로그인 되어있음.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LogoutSuccess">
            <summary>
            Logout
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.SnapshotSuccess">
            <summary>
            Snapshot
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.CreateRoomSuccess">
            <summary>
            CreateRoom
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.CreateRoomFailAlreadyJoinedRoom">
            <summary>
            이미 룸에 들어가있는 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.CreateRoomFailCreateRoomId">
            <summary>
            룸 아이디 발급 실패
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.CreateRoomFailCreateRoom">
            <summary>
            룸 생성 실패
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.JoinRoomSuccess">
            <summary>
            JoinRoom
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.JoinRoomFailRoomDoesNotExist">
            <summary>
            룸이 존재하지 않는 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.JoinRoomFailAlreadyJoinedRoom">
            <summary>
            이미 룸에 들어가있는 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.JoinRoomFailAlreadyFull">
            <summary>
            이미 룸의 인원수가 차있을 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.JoinRoomFailRoomMatch">
            <summary>
            룸매치에서 문제가 발생할 경우
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LeaveRoomSuccess">
            <summary>
            LeaveRoom
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomSuccess">
            <summary>
            MatchRoom
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailRoomDoesNotExist">
            <summary>
            룸이 존재하지 않는 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailAlreadyJoinedRoom">
            <summary>
            이미 룸에 들어가있는 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailLeaveRoom">
            <summary>
            룸 이동 기능으로 매칭시킬 때, 기존룸에서 나가기가 실패한 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailInProgress">
            <summary>
            이미 매치 매이킹이 진행중인 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailMatchedRoomDoesNotExist">
            <summary>
            매칭은 되었으나 해당 방이 존재하지 않는 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailCreateRoomId">
            <summary>
            룸 생성을 위한 룸 아이디 발급 실패.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailCreateRoom">
            <summary>
            룸 생성 실패.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailInvalidRoomId">
            <summary>
            잘못된 RoomId
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailInvalidNodeId">
            <summary>
            잘못된 NodeId
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailInvalidUserId">
            <summary>
            잘못된 UserId
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailMatchedRoomNotFound">
            <summary>
            매칭을 진행하였으나, 방을 찾지 못함.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailInvalidMatchingUserCategory">
            <summary>
            잘못된 매칭 유저 카테고리
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailMatchingUserCategoryEmpty">
            <summary>
            매칭 유저 카테고리 사이즈가 0일 경우
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailBaseRoomMatchFormNull">
            <summary>
            매칭 신청서가 없음.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomFailBaseRoomMatchInfoNull">
            <summary>
            매칭 정보가 없음.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.NamedRoomSuccess">
            <summary>
            NamedRoom
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.NamedRoomFailRoomDoesNotExist">
            <summary>
            룸이 존재하지 않는 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.NamedRoomFailAlreadyJoinedRoom">
            <summary>
            이미 룸에 들어가있는 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.NamedRoomFailInvalidRoomName">
            <summary>
            잘못된 룸 이름을 보냈을 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.NamedRoomFailCreateRoom">
            <summary>
            룸 생성 실패.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchUserStartSuccess">
            <summary>
            MatchUserStart
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchUserStartFailAlreadyJoinedRoom">
            <summary>
            이미 룸에 들어가있는 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchUserCancelSuccess">
            <summary>
            MatchUserCancel
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchUserCancelFailAlreadyJoinedRoom">
            <summary>
            이미 룸에 들어가있는 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchUserCancelFailNotInProgress">
            <summary>
            매칭이 진행중이지 않은 경우
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchPartyStartSuccess">
            <summary>
            MatchPartyStart
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchPartyStartFailPartyMatchWeird">
            <summary>
            Party Room이 아닌 방으로부터 파티 매칭 요청
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchPartyCancelSuccess">
            <summary>
            MatchPartyCancel
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchPartyCancelFailPartyMatchWeird">
            <summary>
            Party Room이 아닌 방으로부터 파티 매칭 요청
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchUserDoneSuccess">
            <summary>
            MatchUserDone
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchUserDoneFailRoomDoesNotExist">
            <summary>
            룸이 존재하지 않는 경우.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MoveChannelSuccess">
            <summary>
            MoveChannel
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ChannelListSuccess">
            <summary>
            ChannelList
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ChannelInfoSuccess">
            <summary>
            ChannelInfo
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.AllChannelInfoSuccess">
            <summary>
            All ChannelInfo
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ChannelCountInfoSuccess">
            <summary>
            ChannelCountInfo
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.AllChannelCountInfoSuccess">
            <summary>
            All ChannelCountInfo
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseSystemError">
            <summary>
            Disconnect
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseBaseConnection">
            <summary>
            Disconnect by content
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseBaseUser">
            <summary>
            BaseUser의 closeConnection() 호출
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseAdminKick">
            <summary>
            Admin에서 kick
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseInvalidNode">
            <summary>
            Disconnect by server state
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseAuthenticationFail">
            <summary>
            Disconnect by client
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseAuthenticationFailEmptyAccountId">
            <summary>
            인증 실패 - AccountId가 없을 경우
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseDuplicateLogin">
            <summary>
            중복 로그인
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseByNewConnection">
            <summary>
            Disconnect by server state. client can't receive.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseDisconnectAlarmFromClient">
            <summary>
            Client와의 연결 끊김을 감지할 경우
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseDisconnectAlarmNotFindSession">
            <summary>
            Session을 찾을 수 없는 경우
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseCheckClientStateFail">
            <summary>
            클라이언트가 CHECK_CLIENT_STATE에 응답하지 않을 경우
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.ForceCloseGhostUser">
            <summary>
            GhostUser
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.SocketDisconnect">
            <summary>
            Disconnect by socket state. used by client only.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.NodeNotFound">
            <summary>
            Server &lt;-> Server : 10000 ~ 19999
            Common
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.LocationError">
            <summary>
            Location
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchUserError">
            <summary>
            Match User
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.MatchRoomError">
            <summary>
            Match Room
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ErrorCode.TransferUserError">
            <summary>
            Transfer
            </summary>
        </member>
        <member name="T:Com.Nhn.Gameanvilcore.Protocol.BaseReflection">
            <summary>Holder for reflection information generated from base.proto</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.BaseReflection.Descriptor">
            <summary>File descriptor for base.proto</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.TargetType.GameUser">
            <summary>
            Game IUser (기본값)f
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.TargetType.GatewayConnection">
            <summary>
            Gateway.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.TargetType.GatewaySession">
            <summary>
            Gateway. user
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.Header.ErrorCodeFieldNumber">
            <summary>Field number for the "error_code" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.Header.ServiceIdFieldNumber">
            <summary>Field number for the "service_id" field.</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.Header.ServiceId">
            <summary>
            user
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.Header.SubIdFieldNumber">
            <summary>Field number for the "sub_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.Header.TargetTypeFieldNumber">
            <summary>Field number for the "target_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.Header.MsgIdFieldNumber">
            <summary>Field number for the "msg_id" field.</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.Header.MsgId">
            <summary>
            packet
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.Header.SeqFieldNumber">
            <summary>Field number for the "seq" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.Header.UncompressSizeFieldNumber">
            <summary>Field number for the "uncompress_size" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.Payload.MsgIdFieldNumber">
            <summary>Field number for the "msg_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.Payload.DataFieldNumber">
            <summary>Field number for the "data" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.Payload.PriorityFieldNumber">
            <summary>Field number for the "priority" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MultiMessage.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MultiMessage.ReplyFieldNumber">
            <summary>Field number for the "reply" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.AuthenticationReq.AccountIdFieldNumber">
            <summary>Field number for the "account_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.AuthenticationReq.PasswordFieldNumber">
            <summary>Field number for the "password" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.AuthenticationReq.DeviceIdFieldNumber">
            <summary>Field number for the "device_id" field.</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.AuthenticationReq.DeviceId">
             <summary>
            int32 cid = 3;
             </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.AuthenticationReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.AuthenticationRes.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.AuthenticationRes.UserListFieldNumber">
            <summary>Field number for the "user_list" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.AuthenticationRes.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.AuthenticationRes.ServiceIdsFieldNumber">
            <summary>Field number for the "service_ids" field.</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.AuthenticationRes.ServiceIds">
            <summary>
            &lt;serviceName, serviceId>
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginReq.SubIdFieldNumber">
            <summary>Field number for the "sub_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginReq.ChannelIdFieldNumber">
            <summary>Field number for the "channel_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginReq.UserTypeFieldNumber">
            <summary>Field number for the "user_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginRes.UserIdFieldNumber">
            <summary>Field number for the "user_id" field.</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.LoginRes.UserId">
            <summary>
            Client가 가지고 있음.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginRes.UserTypeFieldNumber">
            <summary>Field number for the "user_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginRes.ChannelIdFieldNumber">
            <summary>Field number for the "channel_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginRes.ServiceIdFieldNumber">
            <summary>Field number for the "service_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginRes.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginRes.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginRes.IsUserMatchingFieldNumber">
            <summary>Field number for the "is_user_matching" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginRes.IsReloginedFieldNumber">
            <summary>Field number for the "is_relogined" field.</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.LoginRes.IsRelogined">
            <summary>
            relogined
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginRes.RejoinedRoomIdFieldNumber">
            <summary>Field number for the "rejoined_room_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginRes.RejoinedRoomNameFieldNumber">
            <summary>Field number for the "rejoined_room_name" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginRes.RoomRejoinPayloadFieldNumber">
            <summary>Field number for the "room_rejoin_payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginedUserInfo.SubIdFieldNumber">
            <summary>Field number for the "sub_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginedUserInfo.ServiceIdFieldNumber">
            <summary>Field number for the "service_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginedUserInfo.UserIdFieldNumber">
            <summary>Field number for the "user_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginedUserInfo.UserTypeFieldNumber">
            <summary>Field number for the "user_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginedUserInfo.ChannelIdFieldNumber">
            <summary>Field number for the "channel_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LoginedUserInfo.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.LoginedUserInfo.Payload">
            <summary>
            to onLogin or onReLogin.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LogoutReq.SubIdFieldNumber">
            <summary>Field number for the "sub_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LogoutReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LogoutRes.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.SnapshotReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.SnapshotRes.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.CreateRoomReq.RoomTypeFieldNumber">
            <summary>Field number for the "room_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.CreateRoomReq.RoomNameFieldNumber">
            <summary>Field number for the "room_name" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.CreateRoomReq.MatchingGroupFieldNumber">
            <summary>Field number for the "matching_group" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.CreateRoomReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.CreateRoomRes.RoomIdFieldNumber">
            <summary>Field number for the "room_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.CreateRoomRes.RoomNameFieldNumber">
            <summary>Field number for the "room_name" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.CreateRoomRes.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.JoinRoomReq.RoomIdFieldNumber">
            <summary>Field number for the "room_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.JoinRoomReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.JoinRoomReq.RoomTypeFieldNumber">
            <summary>Field number for the "room_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.JoinRoomReq.MatchingUserCategoryFieldNumber">
            <summary>Field number for the "matching_user_category" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.JoinRoomRes.RoomIdFieldNumber">
            <summary>Field number for the "room_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.JoinRoomRes.RoomNameFieldNumber">
            <summary>Field number for the "room_name" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.JoinRoomRes.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LeaveRoomReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LeaveRoomRes.RoomIdFieldNumber">
            <summary>Field number for the "room_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.LeaveRoomRes.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomReq.RoomIdFieldNumber">
            <summary>Field number for the "room_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomReq.CreateFieldNumber">
            <summary>Field number for the "create" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomReq.RoomTypeFieldNumber">
            <summary>Field number for the "room_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomReq.MoveRoomFieldNumber">
            <summary>Field number for the "move_room" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomReq.LeaveRoomPayloadFieldNumber">
            <summary>Field number for the "leave_room_payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomReq.MatchingGroupFieldNumber">
            <summary>Field number for the "matching_group" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomReq.MatchingUserCategoryFieldNumber">
            <summary>Field number for the "matching_user_category" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomRes.ResultCodeFieldNumber">
            <summary>Field number for the "resultCode" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomRes.CreatedFieldNumber">
            <summary>Field number for the "created" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomRes.RoomIdFieldNumber">
            <summary>Field number for the "room_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomRes.RoomNameFieldNumber">
            <summary>Field number for the "room_name" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchRoomRes.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.NamedRoomReq.RoomNameFieldNumber">
            <summary>Field number for the "room_name" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.NamedRoomReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.NamedRoomReq.RoomTypeFieldNumber">
            <summary>Field number for the "room_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.NamedRoomReq.PartyFieldNumber">
            <summary>Field number for the "party" field.</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.NamedRoomReq.Party">
            <summary>
            Party matchmaking을 위한 방인가?
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.NamedRoomRes.CreatedFieldNumber">
            <summary>Field number for the "created" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.NamedRoomRes.RoomIdFieldNumber">
            <summary>Field number for the "room_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.NamedRoomRes.RoomNameFieldNumber">
            <summary>Field number for the "room_name" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.NamedRoomRes.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchUserStartReq.RoomTypeFieldNumber">
            <summary>Field number for the "room_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchUserStartReq.MatchingGroupFieldNumber">
            <summary>Field number for the "matching_group" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchUserStartReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchUserStartRes.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchPartyStartReq.RoomTypeFieldNumber">
            <summary>Field number for the "room_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchPartyStartReq.MatchingGroupFieldNumber">
            <summary>Field number for the "matching_group" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchPartyStartReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchPartyStartResOrNoti.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchPartyCancelReq.RoomTypeFieldNumber">
            <summary>Field number for the "room_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchUserDone.CreatedFieldNumber">
            <summary>Field number for the "created" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchUserDone.RoomIdFieldNumber">
            <summary>Field number for the "room_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchUserDone.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MatchUserCancelReq.RoomTypeFieldNumber">
            <summary>Field number for the "room_type" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MoveChannelReq.ChannelIdFieldNumber">
            <summary>Field number for the "channel_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MoveChannelReq.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MoveChannelRes.ChannelIdFieldNumber">
            <summary>Field number for the "channel_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MoveChannelRes.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetChannelListReq.ServiceIdFieldNumber">
            <summary>Field number for the "service_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetChannelListRes.ChannelListFieldNumber">
            <summary>Field number for the "channel_list" field.</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.GetChannelListRes.ChannelList">
            <summary>
            list of channel ID.
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ChannelInfo.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetChannelInfoReq.ServiceIdFieldNumber">
            <summary>Field number for the "service_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetChannelInfoReq.ChannelIdFieldNumber">
            <summary>Field number for the "channel_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetChannelInfoRes.ChannelInfoFieldNumber">
            <summary>Field number for the "channelInfo" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetAllChannelInfoReq.ServiceIdFieldNumber">
            <summary>Field number for the "service_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetAllChannelInfoRes.ChannelInfoFieldNumber">
            <summary>Field number for the "channelInfo" field.</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.GetAllChannelInfoRes.ChannelInfo">
            <summary>
            channelId, ChannelInfo
            </summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ChannelCountInfo.ChannelIdFieldNumber">
            <summary>Field number for the "channel_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ChannelCountInfo.UserCountFieldNumber">
            <summary>Field number for the "user_count" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ChannelCountInfo.RoomCountFieldNumber">
            <summary>Field number for the "room_count" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetChannelCountInfoReq.ServiceIdFieldNumber">
            <summary>Field number for the "service_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetChannelCountInfoReq.ChannelIdFieldNumber">
            <summary>Field number for the "channel_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetChannelCountInfoRes.ChannelCountInfoFieldNumber">
            <summary>Field number for the "channelCountInfo" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetAllChannelCountInfoReq.ServiceIdFieldNumber">
            <summary>Field number for the "service_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.GetAllChannelCountInfoRes.ChannelCountInfoFieldNumber">
            <summary>Field number for the "channelCountInfo" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ForceLogoutNoti.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ForceCloseConnectionNoti.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ForceCloseSessionNoti.ServiceIdFieldNumber">
            <summary>Field number for the "service_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ForceCloseSessionNoti.SubIdFieldNumber">
            <summary>Field number for the "sub_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ForceCloseSessionNoti.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ForceLeaveRoomNoti.RoomIdFieldNumber">
            <summary>Field number for the "room_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.ForceLeaveRoomNoti.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MoveChannelNoti.ChannelIdFieldNumber">
            <summary>Field number for the "channel_id" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.MoveChannelNoti.PayloadFieldNumber">
            <summary>Field number for the "payload" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.Notice.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.AdminKickoutNoti.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.PauseClientStateCheck.PauseTimeFieldNumber">
            <summary>Field number for the "pauseTime" field.</summary>
        </member>
        <member name="T:Com.Nhn.Gameanvilcore.Protocol.InternalReflection">
            <summary>Holder for reflection information generated from internal.proto</summary>
        </member>
        <member name="P:Com.Nhn.Gameanvilcore.Protocol.InternalReflection.Descriptor">
            <summary>File descriptor for internal.proto</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.InternalConnect.ResultFieldNumber">
            <summary>Field number for the "result" field.</summary>
        </member>
        <member name="F:Com.Nhn.Gameanvilcore.Protocol.InternalSocketClose.ResultCodeFieldNumber">
            <summary>Field number for the "ResultCode" field.</summary>
        </member>
    </members>
</doc>
