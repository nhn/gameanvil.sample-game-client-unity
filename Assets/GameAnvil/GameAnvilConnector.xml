<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GameAnvilConnector</name>
    </assembly>
    <members>
        <member name="M:GameAnvil.SyncStorage.addSyncData(System.Int64,Com.Nhn.Gameanvilcore.Protocol.Sync)">
            <summary>
            Store the Base.Sync data with the syncId as the key in the syncs map.
            </summary>
            <param name="syncId"></param>
            <param name="syncData"></param>
        </member>
        <member name="M:GameAnvil.SyncStorage.addSyncGameObjectData(System.Int64,UnityEngine.GameObject)">
            <summary>
            Store the sync gameObject data with the syncId as the key in the syncs map.
            </summary>
            <param name="syncId"></param>
            <param name="sync"></param>
        </member>
        <member name="M:GameAnvil.SyncStorage.getSyncData(System.Int64)">
            <summary>
            Returns the value(Base.Sync) corresponding to the key(syncId).
            </summary>
            <param name="sync"></param>
            <returns></returns>
        </member>
        <member name="T:GameAnvil.DelOnInstantiate">
            <summary>
            동기화 게임오브젝트 생성 후 호출되는 사용자 콜백
            </summary>
            <param name="syncGo">생성한 동기화 게임오브젝트</param>
        </member>
        <member name="F:GameAnvil.SyncController.onInstantiate">
            <summary>
            동기화 게임오브젝트 생성 결과를 받을 대리자
            </summary>
        </member>
        <member name="M:GameAnvil.SyncController.Instantiate(System.String,UnityEngine.Vector3,UnityEngine.Quaternion)">
            <summary>
            동기화 게임오브젝트를 생성한다.
            </summary>
            <param name="prefabName">생성하려는 prefab의 이름. 해당 prefab은 Assets/Resources 폴더 하위에 존재해야 한다.</param>
            <param name="v">prefab을 생성할 position</param>
            <param name="r">prefab의 rotation</param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.SyncController.Destroy(System.Int64)">
            <summary>
            Destroy the sync gameObject which is 'isMine'.
            After destroying the gameObject, send a DestroySync Packet if the destroyPacketSendOption is DESTROY_FUNCTION_SEND.
            </summary>
            <param name="destroySync"></param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.SyncController.DestroyAll">
            <summary>
            Destroy all sync gameObjects stored in SyncStorage syncGOs map.
            Used at onDisconnect, onLeaveRoom, onLogout callbacks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.SyncController.roomSyncStart">
            <summary>
            방에 입장하고 바로 동기화를 하기를 원하는 경우에 호출합니다.
            서버로부터 받아온 기존 방의 동기화 데이터를 활용하여 동기화를 시작합니다.
            방에 중입한 경우 이전 동기화 데이터를 동기화하기 위해 사용합니다.
            </summary>
        </member>
        <member name="M:GameAnvil.SyncController.InstantiateSyncObject">
            <summary>
            동기화를 하기를 원하는 시점에 호출합니다.
            서버로부터 받아온 기존 방의 동기화 데이터를 활용하여 동기화를 시작합니다.
            방에 중입한 경우 이전 동기화 데이터를 동기화하기 위해 사용합니다.
            </summary>
        </member>
        <member name="M:GameAnvil.SyncController.checkIsMine(System.Int64)">
            <summary>
            Verify that the packet came from itself because of the broadcast.
            </summary>
            <param name="syncId"></param>
            <returns></returns>
        </member>
        <member name="M:GameAnvil.SyncController.SetCustomProperty``1(System.String,``0)">
            <summary>
            사용자 정의 값을 추가합니다.
            </summary>
            <typeparam name="T">사용자 정의 값 타입</typeparam>
            <param name="key">사용자 정의 값 구분용 키</param>
            <param name="value">사용자 정의 값</param>
        </member>
        <member name="M:GameAnvil.SyncController.SetCustomPropertyCAS``1(System.String,``0)">
            <summary>
            사용자 정의 값이 최신 상태인지 확인 후 변경
            </summary>
            <typeparam name="T">사용자 정의 값 타입</typeparam>
            <param name="key">사용자 정의 값 구분용 키</param>
            <param name="value">사용자 정의 값</param>
        </member>
        <member name="M:GameAnvil.SyncController.GetCustomProperty``1(System.String)">
            <summary>
            사용자 정의 값을 조회합니다.
            </summary>
            <typeparam name="T">사용자 정의 값 타입</typeparam>
            <param name="key">사용자 정의 값 구분용 키</param>
            <returns>사용자 정의 값</returns>
        </member>
        <member name="M:GameAnvil.SyncController.RemoveCustomProperty(System.String)">
            <summary>
            사용자 정의 값을 삭제합니다.
            </summary>
            <param name="key">사용자 정의 값 구분용 키</param>
        </member>
        <member name="M:GameAnvil.SyncController.OnApplicationPause(System.Boolean)">
            <summary>
            https://answers.unity.com/questions/449795/how-to-tell-if-your-android-app-has-been-put-in-th.html
            </summary>
            <param name="pause"></param>
        </member>
        <member name="F:GameAnvil.GameAnvilConnector.onPauseListeners">
            <summary>
            어플리케이션 Pause시 호출되는 사용자 콜백
            </summary>        
        </member>
        <member name="F:GameAnvil.GameAnvilConnector.onResumeListeners">
            <summary>
            어플리케이션 Resume시 호출되는 사용자 콜백
            </summary>
        </member>
        <member name="F:GameAnvil.GameAnvilConnector.onDisconnected">
            <summary>
            네트워크 연결이 끊어질 경우 호출되는 사용자 콜백
            </summary>
        </member>
        <member name="T:GameAnvil.GameAnvilConnector.DelOnQuickConnect">
            <summary>
            QuickConnect 요청 결과를 전달 받을 대리자
            </summary>
            <param name="resultCode">QuickConnect 요청 결과</param>
            <param name="userAgent">방 생성, 입장 등 유저와 관련된 기능을 사용할 수 있도록 해주는 에이전트</param>
            <param name="quickConnectResult">서버로부터 받은 인증 관련 추가 정보, 서버로부터 받은 로그인 관련 추가 정보, 연결 요청 결과, 인증 요청 결과, 로그인 요청 결과 묶음</param>
        </member>
        <member name="M:GameAnvil.GameAnvilConnector.QuickConnect(GameAnvil.Payload,GameAnvil.Payload,GameAnvil.GameAnvilConnector.DelOnQuickConnect)">
            <summary>
            GameAnvil 서버에 연결 시도, 연결 성공 시 인증 요청, 인증 성공 시 로그인 요청
            연결/인증/로그인 모두 성공 시 QUICK_CONNECT_SUCCESS
            </summary>
            <param name="authenticatePayload">인증을 위해 추가로 전달하는 정보</param>
            <param name="loginPayload">로그인을 위해 추가로 전달하는 정보</param>
            <param name="onQuickConnect">QuickConnect 요청 결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.GameAnvilConnector.QuickDisconnect(GameAnvil.GameAnvilConnector.DelOnQuickDisconnect)">
            <summary>
            로그아웃, GameAnvil 서버와의 연결 해제 요청, 콜백 호출
            </summary>
            <param name="onQuickDisconnect">요청 결과를 전달 받을 대리자</param>
        </member>
        <member name="M:GameAnvil.GameAnvilConnector.Disconnect">
            <summary>
            GameAnvil 서버와의 연결 해제 요청
            </summary>
        </member>
        <member name="M:GameAnvil.GameAnvilConnector.Disconnect(GameAnvil.GameAnvilConnector.DelOnDisconnect)">
            <summary>
            GameAnvil 서버와의 연결 해제 요청
            </summary>
        </member>
    </members>
</doc>
