// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameSingle.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Nhn.Gameflex.Sample.Protocol {

  /// <summary>Holder for reflection information generated from GameSingle.proto</summary>
  public static partial class GameSingleReflection {

    #region Descriptor
    /// <summary>File descriptor for GameSingle.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameSingleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBHYW1lU2luZ2xlLnByb3RvEiBjb20ubmhuLmdhbWVmbGV4LnNhbXBsZS5w",
            "cm90b2NvbBoMUmVzdWx0LnByb3RvGgpVc2VyLnByb3RvImIKDFN0YXJ0R2Ft",
            "ZVJlcRIMCgRkZWNrGAEgASgJEkQKCmRpZmZpY3VsdHkYAiABKA4yMC5jb20u",
            "bmhuLmdhbWVmbGV4LnNhbXBsZS5wcm90b2NvbC5EaWZmaWN1bHR5VHlwZSJk",
            "CgxTdGFydEdhbWVSZXMSPgoJZXJyb3JDb2RlGAEgASgOMisuY29tLm5obi5n",
            "YW1lZmxleC5zYW1wbGUucHJvdG9jb2wuRXJyb3JDb2RlEhQKDGJhbGFuY2VI",
            "ZWFydBgCIAEoBSJBChBTY29yZVJhbmtpbmdEYXRhEgwKBHV1aWQYASABKAkS",
            "EAoIbmlja25hbWUYAiABKAkSDQoFc2NvcmUYAyABKAEiLQoPU2NvcmVSYW5r",
            "aW5nUmVxEg0KBXN0YXJ0GAEgASgFEgsKA2VuZBgCIAEoBSKYAQoPU2NvcmVS",
            "YW5raW5nUmVzEj8KCnJlc3VsdENvZGUYASABKA4yKy5jb20ubmhuLmdhbWVm",
            "bGV4LnNhbXBsZS5wcm90b2NvbC5FcnJvckNvZGUSRAoIcmFua2luZ3MYAiAD",
            "KAsyMi5jb20ubmhuLmdhbWVmbGV4LnNhbXBsZS5wcm90b2NvbC5TY29yZVJh",
            "bmtpbmdEYXRhIkEKBlRhcE1zZxIWCg5zZWxlY3RDYXJkTmFtZRgBIAEoCRIN",
            "CgVjb21ibxgCIAEoBRIQCgh0YXBTY29yZRgDIAEoAyJICgpFbmRHYW1lUmVx",
            "EjoKB2VuZFR5cGUYASABKA4yKS5jb20ubmhuLmdhbWVmbGV4LnNhbXBsZS5w",
            "cm90b2NvbC5FbmRUeXBlIp4BCgpFbmRHYW1lUmVzEj4KCWVycm9yQ29kZRgB",
            "IAEoDjIrLmNvbS5uaG4uZ2FtZWZsZXguc2FtcGxlLnByb3RvY29sLkVycm9y",
            "Q29kZRI8Cgh1c2VyRGF0YRgCIAEoCzIqLmNvbS5uaG4uZ2FtZWZsZXguc2Ft",
            "cGxlLnByb3RvY29sLlVzZXJEYXRhEhIKCnRvdGFsU2NvcmUYAyABKAMqSAoH",
            "RW5kVHlwZRIRCg1HQU1FX0VORF9OT05FEAASFAoQR0FNRV9FTkRfR0lWRV9V",
            "UBABEhQKEEdBTUVfRU5EX1RJTUVfVVAQAipTCg5EaWZmaWN1bHR5VHlwZRIV",
            "ChFESUZGSUNVTFRZX05PUk1BTBAAEhUKEURJRkZJQ1VMVFlfTUVESVVNEAES",
            "EwoPRElGRklDVUxUWV9IQVJEEAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.Nhn.Gameflex.Sample.Protocol.ResultReflection.Descriptor, global::Com.Nhn.Gameflex.Sample.Protocol.UserReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Com.Nhn.Gameflex.Sample.Protocol.EndType), typeof(global::Com.Nhn.Gameflex.Sample.Protocol.DifficultyType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Nhn.Gameflex.Sample.Protocol.StartGameReq), global::Com.Nhn.Gameflex.Sample.Protocol.StartGameReq.Parser, new[]{ "Deck", "Difficulty" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Nhn.Gameflex.Sample.Protocol.StartGameRes), global::Com.Nhn.Gameflex.Sample.Protocol.StartGameRes.Parser, new[]{ "ErrorCode", "BalanceHeart" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Nhn.Gameflex.Sample.Protocol.ScoreRankingData), global::Com.Nhn.Gameflex.Sample.Protocol.ScoreRankingData.Parser, new[]{ "Uuid", "Nickname", "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Nhn.Gameflex.Sample.Protocol.ScoreRankingReq), global::Com.Nhn.Gameflex.Sample.Protocol.ScoreRankingReq.Parser, new[]{ "Start", "End" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Nhn.Gameflex.Sample.Protocol.ScoreRankingRes), global::Com.Nhn.Gameflex.Sample.Protocol.ScoreRankingRes.Parser, new[]{ "ResultCode", "Rankings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Nhn.Gameflex.Sample.Protocol.TapMsg), global::Com.Nhn.Gameflex.Sample.Protocol.TapMsg.Parser, new[]{ "SelectCardName", "Combo", "TapScore" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Nhn.Gameflex.Sample.Protocol.EndGameReq), global::Com.Nhn.Gameflex.Sample.Protocol.EndGameReq.Parser, new[]{ "EndType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Nhn.Gameflex.Sample.Protocol.EndGameRes), global::Com.Nhn.Gameflex.Sample.Protocol.EndGameRes.Parser, new[]{ "ErrorCode", "UserData", "TotalScore" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// 게임 종료 타입
  /// </summary>
  public enum EndType {
    [pbr::OriginalName("GAME_END_NONE")] GameEndNone = 0,
    [pbr::OriginalName("GAME_END_GIVE_UP")] GameEndGiveUp = 1,
    [pbr::OriginalName("GAME_END_TIME_UP")] GameEndTimeUp = 2,
  }

  /// <summary>
  /// 게임 덱 난이도 타입
  /// </summary>
  public enum DifficultyType {
    [pbr::OriginalName("DIFFICULTY_NORMAL")] DifficultyNormal = 0,
    [pbr::OriginalName("DIFFICULTY_MEDIUM")] DifficultyMedium = 1,
    [pbr::OriginalName("DIFFICULTY_HARD")] DifficultyHard = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 싱글게임 시작
  /// </summary>
  public sealed partial class StartGameReq : pb::IMessage<StartGameReq> {
    private static readonly pb::MessageParser<StartGameReq> _parser = new pb::MessageParser<StartGameReq>(() => new StartGameReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartGameReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Nhn.Gameflex.Sample.Protocol.GameSingleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameReq(StartGameReq other) : this() {
      deck_ = other.deck_;
      difficulty_ = other.difficulty_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameReq Clone() {
      return new StartGameReq(this);
    }

    /// <summary>Field number for the "deck" field.</summary>
    public const int DeckFieldNumber = 1;
    private string deck_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Deck {
      get { return deck_; }
      set {
        deck_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 2;
    private global::Com.Nhn.Gameflex.Sample.Protocol.DifficultyType difficulty_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Nhn.Gameflex.Sample.Protocol.DifficultyType Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartGameReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartGameReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Deck != other.Deck) return false;
      if (Difficulty != other.Difficulty) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Deck.Length != 0) hash ^= Deck.GetHashCode();
      if (Difficulty != 0) hash ^= Difficulty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Deck.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Deck);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Difficulty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Deck.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Deck);
      }
      if (Difficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Difficulty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartGameReq other) {
      if (other == null) {
        return;
      }
      if (other.Deck.Length != 0) {
        Deck = other.Deck;
      }
      if (other.Difficulty != 0) {
        Difficulty = other.Difficulty;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Deck = input.ReadString();
            break;
          }
          case 16: {
            difficulty_ = (global::Com.Nhn.Gameflex.Sample.Protocol.DifficultyType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartGameRes : pb::IMessage<StartGameRes> {
    private static readonly pb::MessageParser<StartGameRes> _parser = new pb::MessageParser<StartGameRes>(() => new StartGameRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartGameRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Nhn.Gameflex.Sample.Protocol.GameSingleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRes(StartGameRes other) : this() {
      errorCode_ = other.errorCode_;
      balanceHeart_ = other.balanceHeart_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRes Clone() {
      return new StartGameRes(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::Com.Nhn.Gameflex.Sample.Protocol.ErrorCode errorCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Nhn.Gameflex.Sample.Protocol.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "balanceHeart" field.</summary>
    public const int BalanceHeartFieldNumber = 2;
    private int balanceHeart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BalanceHeart {
      get { return balanceHeart_; }
      set {
        balanceHeart_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartGameRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartGameRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (BalanceHeart != other.BalanceHeart) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (BalanceHeart != 0) hash ^= BalanceHeart.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (BalanceHeart != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BalanceHeart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (BalanceHeart != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BalanceHeart);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartGameRes other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.BalanceHeart != 0) {
        BalanceHeart = other.BalanceHeart;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            errorCode_ = (global::Com.Nhn.Gameflex.Sample.Protocol.ErrorCode) input.ReadEnum();
            break;
          }
          case 16: {
            BalanceHeart = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScoreRankingData : pb::IMessage<ScoreRankingData> {
    private static readonly pb::MessageParser<ScoreRankingData> _parser = new pb::MessageParser<ScoreRankingData>(() => new ScoreRankingData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScoreRankingData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Nhn.Gameflex.Sample.Protocol.GameSingleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRankingData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRankingData(ScoreRankingData other) : this() {
      uuid_ = other.uuid_;
      nickname_ = other.nickname_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRankingData Clone() {
      return new ScoreRankingData(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private double score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScoreRankingData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScoreRankingData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (Nickname != other.Nickname) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Score, other.Score)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (Score != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Score);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (Score != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (Score != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScoreRankingData other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.Score != 0D) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 25: {
            Score = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScoreRankingReq : pb::IMessage<ScoreRankingReq> {
    private static readonly pb::MessageParser<ScoreRankingReq> _parser = new pb::MessageParser<ScoreRankingReq>(() => new ScoreRankingReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScoreRankingReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Nhn.Gameflex.Sample.Protocol.GameSingleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRankingReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRankingReq(ScoreRankingReq other) : this() {
      start_ = other.start_;
      end_ = other.end_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRankingReq Clone() {
      return new ScoreRankingReq(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private int start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 2;
    private int end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScoreRankingReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScoreRankingReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Start != other.Start) return false;
      if (End != other.End) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0) hash ^= Start.GetHashCode();
      if (End != 0) hash ^= End.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Start);
      }
      if (End != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(End);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
      }
      if (End != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(End);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScoreRankingReq other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.End != 0) {
        End = other.End;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Start = input.ReadInt32();
            break;
          }
          case 16: {
            End = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScoreRankingRes : pb::IMessage<ScoreRankingRes> {
    private static readonly pb::MessageParser<ScoreRankingRes> _parser = new pb::MessageParser<ScoreRankingRes>(() => new ScoreRankingRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScoreRankingRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Nhn.Gameflex.Sample.Protocol.GameSingleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRankingRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRankingRes(ScoreRankingRes other) : this() {
      resultCode_ = other.resultCode_;
      rankings_ = other.rankings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRankingRes Clone() {
      return new ScoreRankingRes(this);
    }

    /// <summary>Field number for the "resultCode" field.</summary>
    public const int ResultCodeFieldNumber = 1;
    private global::Com.Nhn.Gameflex.Sample.Protocol.ErrorCode resultCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Nhn.Gameflex.Sample.Protocol.ErrorCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "rankings" field.</summary>
    public const int RankingsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Nhn.Gameflex.Sample.Protocol.ScoreRankingData> _repeated_rankings_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Nhn.Gameflex.Sample.Protocol.ScoreRankingData.Parser);
    private readonly pbc::RepeatedField<global::Com.Nhn.Gameflex.Sample.Protocol.ScoreRankingData> rankings_ = new pbc::RepeatedField<global::Com.Nhn.Gameflex.Sample.Protocol.ScoreRankingData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Nhn.Gameflex.Sample.Protocol.ScoreRankingData> Rankings {
      get { return rankings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScoreRankingRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScoreRankingRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultCode != other.ResultCode) return false;
      if(!rankings_.Equals(other.rankings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResultCode != 0) hash ^= ResultCode.GetHashCode();
      hash ^= rankings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ResultCode);
      }
      rankings_.WriteTo(output, _repeated_rankings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      size += rankings_.CalculateSize(_repeated_rankings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScoreRankingRes other) {
      if (other == null) {
        return;
      }
      if (other.ResultCode != 0) {
        ResultCode = other.ResultCode;
      }
      rankings_.Add(other.rankings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            resultCode_ = (global::Com.Nhn.Gameflex.Sample.Protocol.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            rankings_.AddEntriesFrom(input, _repeated_rankings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TapMsg : pb::IMessage<TapMsg> {
    private static readonly pb::MessageParser<TapMsg> _parser = new pb::MessageParser<TapMsg>(() => new TapMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TapMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Nhn.Gameflex.Sample.Protocol.GameSingleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TapMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TapMsg(TapMsg other) : this() {
      selectCardName_ = other.selectCardName_;
      combo_ = other.combo_;
      tapScore_ = other.tapScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TapMsg Clone() {
      return new TapMsg(this);
    }

    /// <summary>Field number for the "selectCardName" field.</summary>
    public const int SelectCardNameFieldNumber = 1;
    private string selectCardName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelectCardName {
      get { return selectCardName_; }
      set {
        selectCardName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "combo" field.</summary>
    public const int ComboFieldNumber = 2;
    private int combo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Combo {
      get { return combo_; }
      set {
        combo_ = value;
      }
    }

    /// <summary>Field number for the "tapScore" field.</summary>
    public const int TapScoreFieldNumber = 3;
    private long tapScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TapScore {
      get { return tapScore_; }
      set {
        tapScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TapMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TapMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SelectCardName != other.SelectCardName) return false;
      if (Combo != other.Combo) return false;
      if (TapScore != other.TapScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SelectCardName.Length != 0) hash ^= SelectCardName.GetHashCode();
      if (Combo != 0) hash ^= Combo.GetHashCode();
      if (TapScore != 0L) hash ^= TapScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SelectCardName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SelectCardName);
      }
      if (Combo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Combo);
      }
      if (TapScore != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TapScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SelectCardName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SelectCardName);
      }
      if (Combo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Combo);
      }
      if (TapScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TapScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TapMsg other) {
      if (other == null) {
        return;
      }
      if (other.SelectCardName.Length != 0) {
        SelectCardName = other.SelectCardName;
      }
      if (other.Combo != 0) {
        Combo = other.Combo;
      }
      if (other.TapScore != 0L) {
        TapScore = other.TapScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SelectCardName = input.ReadString();
            break;
          }
          case 16: {
            Combo = input.ReadInt32();
            break;
          }
          case 24: {
            TapScore = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 싱글게임 종료
  /// </summary>
  public sealed partial class EndGameReq : pb::IMessage<EndGameReq> {
    private static readonly pb::MessageParser<EndGameReq> _parser = new pb::MessageParser<EndGameReq>(() => new EndGameReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndGameReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Nhn.Gameflex.Sample.Protocol.GameSingleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndGameReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndGameReq(EndGameReq other) : this() {
      endType_ = other.endType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndGameReq Clone() {
      return new EndGameReq(this);
    }

    /// <summary>Field number for the "endType" field.</summary>
    public const int EndTypeFieldNumber = 1;
    private global::Com.Nhn.Gameflex.Sample.Protocol.EndType endType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Nhn.Gameflex.Sample.Protocol.EndType EndType {
      get { return endType_; }
      set {
        endType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndGameReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndGameReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EndType != other.EndType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EndType != 0) hash ^= EndType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EndType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EndType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EndType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EndType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndGameReq other) {
      if (other == null) {
        return;
      }
      if (other.EndType != 0) {
        EndType = other.EndType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            endType_ = (global::Com.Nhn.Gameflex.Sample.Protocol.EndType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EndGameRes : pb::IMessage<EndGameRes> {
    private static readonly pb::MessageParser<EndGameRes> _parser = new pb::MessageParser<EndGameRes>(() => new EndGameRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndGameRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Nhn.Gameflex.Sample.Protocol.GameSingleReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndGameRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndGameRes(EndGameRes other) : this() {
      errorCode_ = other.errorCode_;
      userData_ = other.userData_ != null ? other.userData_.Clone() : null;
      totalScore_ = other.totalScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndGameRes Clone() {
      return new EndGameRes(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::Com.Nhn.Gameflex.Sample.Protocol.ErrorCode errorCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Nhn.Gameflex.Sample.Protocol.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "userData" field.</summary>
    public const int UserDataFieldNumber = 2;
    private global::Com.Nhn.Gameflex.Sample.Protocol.UserData userData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Nhn.Gameflex.Sample.Protocol.UserData UserData {
      get { return userData_; }
      set {
        userData_ = value;
      }
    }

    /// <summary>Field number for the "totalScore" field.</summary>
    public const int TotalScoreFieldNumber = 3;
    private long totalScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalScore {
      get { return totalScore_; }
      set {
        totalScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndGameRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndGameRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (!object.Equals(UserData, other.UserData)) return false;
      if (TotalScore != other.TotalScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (userData_ != null) hash ^= UserData.GetHashCode();
      if (TotalScore != 0L) hash ^= TotalScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (userData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserData);
      }
      if (TotalScore != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (userData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserData);
      }
      if (TotalScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndGameRes other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.userData_ != null) {
        if (userData_ == null) {
          userData_ = new global::Com.Nhn.Gameflex.Sample.Protocol.UserData();
        }
        UserData.MergeFrom(other.UserData);
      }
      if (other.TotalScore != 0L) {
        TotalScore = other.TotalScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            errorCode_ = (global::Com.Nhn.Gameflex.Sample.Protocol.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (userData_ == null) {
              userData_ = new global::Com.Nhn.Gameflex.Sample.Protocol.UserData();
            }
            input.ReadMessage(userData_);
            break;
          }
          case 24: {
            TotalScore = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
